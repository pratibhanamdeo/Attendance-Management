{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PratibhaNamdeo\\\\OneDrive - BITTWOBYTE TECHNOLOGY PRIVATE LIMITED\\\\React\\\\my-app\\\\src\\\\Component\\\\Staff.js\",\n  _s = $RefreshSig$();\n// // import React, { useState } from 'react';\n// // import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n// // import { faHome } from '@fortawesome/free-solid-svg-icons';\n\n// // // Sample attendance data\n// // const initialAttendanceData = [\n// //   { sno: 1, rollNo: '001', studentName: 'John Doe', class: '9', section: 'A', present: 'Yes', absent: 'No', leave: 'No', month: 1 },\n// //   { sno: 2, rollNo: '002', studentName: 'Jane Smith', class: '9', section: 'A', present: 'No', absent: 'Yes', leave: 'No', month: 2 },\n// //   { sno: 3, rollNo: '003', studentName: 'Michael Johnson', class: '9', section: 'A', present: 'No', absent: 'No', leave: 'Yes', month: 3 }\n// // ];\n\n// // // MatrixTable component to display attendance data in a table\n// // const MatrixTable = ({ data }) => {\n// //   return (\n// //     <div style={{ width: '100%', marginLeft: 'auto' }}>\n// //       <table border=\"1\" style={{ width: '100%' }}>\n// //         {/* Table header */}\n// //         <thead style={{ backgroundColor: '#5DADE2' }}>\n// //           <tr>\n// //             <th>S.No</th>\n// //             <th>Roll No</th>\n// //             <th>Student Name</th>\n// //             <th>Class</th>\n// //             <th>Section</th>\n// //             <th>Present</th>\n// //             <th>Absent</th>\n// //             <th>Leave</th>\n// //           </tr>\n// //         </thead>\n// //         {/* Table body */}\n// //         <tbody>\n// //           {/* Mapping through attendance data to display rows */}\n// //           {data.map((record, idx) => (\n// //             <tr key={idx}>\n// //               <td>{record.sno}</td>\n// //               <td>{record.rollNo}</td>\n// //               <td>{record.studentName}</td>\n// //               <td>{record.class}</td>\n// //               <td>{record.section}</td>\n// //               <td>{record.present}</td>\n// //               <td>{record.absent}</td>\n// //               <td>{record.leave}</td>\n// //             </tr>\n// //           ))}\n// //         </tbody>\n// //       </table>\n// //     </div>\n// //   );\n// // };\n\n// // // Navbar component\n// // const Navbar = () => {\n// //   // State variables\n// //   const [selectedClass, setSelectedClass] = useState(''); // Selected class\n// //   const [selectedSection, setSelectedSection] = useState(''); // Selected section\n// //   const [selectedMonth, setSelectedMonth] = useState(''); // Selected month\n// //   const [searchTerm, setSearchTerm] = useState(''); // Search term\n// //   const [filteredData, setFilteredData] = useState(initialAttendanceData); // Filtered data state\n// //   const [attendanceType, setAttendanceType] = useState('self'); // Attendance type (self or class)\n\n// //   // Event handlers for dropdown and input changes\n// //   const handleClassChange = (event) => {\n// //     setSelectedClass(event.target.value); // Update selected class state\n// //     filterData(event.target.value, selectedSection, selectedMonth); // Filter data based on class change\n// //   };\n\n// //   const handleSectionChange = (event) => {\n// //     setSelectedSection(event.target.value); // Update selected section state\n// //     filterData(selectedClass, event.target.value, selectedMonth); // Filter data based on section change\n// //   };\n\n// //   const handleMonthChange = (event) => {\n// //     setSelectedMonth(event.target.value); // Update selected month state\n// //     filterData(selectedClass, selectedSection, event.target.value); // Filter data based on month change\n// //   };\n\n// //   const handleAttendanceTypeChange = (event) => {\n// //     setAttendanceType(event.target.value); // Update attendance type (self or class)\n// //   };\n\n// //   const filterData = (classValue, sectionValue, monthValue) => {\n// //     let filtered = initialAttendanceData;\n// //     if (classValue) {\n// //       filtered = filtered.filter(record => record.class === classValue);\n// //     }\n// //     if (sectionValue) {\n// //       filtered = filtered.filter(record => record.section === sectionValue);\n// //     }\n// //     if (monthValue) {\n// //       filtered = filtered.filter(record => record.month === parseInt(monthValue));\n// //     }\n// //     setFilteredData(filtered);\n// //   };\n\n// //   return (\n// //     <div className='containerStyle' style={{ alignItems: 'center', backgroundColor: 'white' }}>\n// //       {/* Navbar header */}\n// //       <div style={{ color: 'black', textAlign: 'left', backgroundColor: '#5DADE2', height: '10vh' }}>\n// //         <h1>Staff </h1> {/* Main heading */}\n// //         <a className=\"nav-link\" href=\"\" style={{ position: 'absolute', left: 0, top: 0 }}>\n// //           <FontAwesomeIcon icon={faHome} style={{ background: 'none', height: '26px', marginTop: '35px', marginLeft: '1450px' }} />\n// //         </a>\n// //       </div>\n// //       {/* Dropdown for Attendance Type */}\n// //       <div style={{ display: 'flex', alignItems: 'center', marginBottom: '10px' }}>\n// //         {/* Attendance header */}\n// //         <h2 style={{ fontSize: '10px', marginRight: '10px' }}>Attendance</h2>\n// //         <select\n// //           value={attendanceType}\n// //           onChange={handleAttendanceTypeChange}\n// //           style={{ width: '100px' }}\n// //         >\n// //           <option value=\"self\">Self</option>\n// //           <option value=\"class\">Class</option>\n// //         </select>\n// //       </div>\n// //       <hr style={{ width: '100%', height: '2px', backgroundColor: 'black', margin: '10px 0' }} />\n\n// //       {/* Attendance filling and viewing section */}\n// //       <div style={{ display: 'flex', alignItems: 'center', marginBottom: '10px', flexDirection: 'column' }}>\n// //         {/* Section and Month dropdowns */}\n// //         {attendanceType === 'class' && (\n// //           <div style={{ display: 'flex', marginBottom: '10px', alignItems: 'center' }}>\n// //             {/* Dropdown for Class */}\n// //             <div className=\"dropdown-container\" style={{ marginBottom: '15px', display: 'flex', flexDirection: 'column', alignItems: 'flex-start' }}>\n// //               <label htmlFor=\"classDropdown\" className=\"dropdown-label\" style={{ marginBottom: '8px' }}>Class:</label>\n// //               <select\n// //                 id=\"classDropdown\"\n// //                 value={selectedClass}\n// //                 onChange={handleClassChange}\n// //                 className=\"dropdown-select\"\n// //                 style={{ width: '200px' }}\n// //               >\n// //                 <option value=\"\">Select Class</option>\n// //                 <option value=\"1\">1</option>\n// //                 <option value=\"2\">2</option>\n// //               </select>\n// //             </div>\n// //             {/* Dropdown for Section */}\n// //             <div className=\"dropdown-container\" style={{ marginBottom: '15px', marginLeft: '10px', display: 'flex', flexDirection: 'column', alignItems: 'flex-start' }}>\n// //               {/* Dropdown for Section Header (positioned at the top) */}\n// //               <label htmlFor=\"sectionDropdown\" className=\"dropdown-label\" style={{ marginBottom: '8px' }}>Section:</label>\n// //               <select\n// //                 id=\"sectionDropdown\"\n// //                 value={selectedSection}\n// //                 onChange={handleSectionChange}\n// //                 className=\"dropdown-select\"\n// //                 style={{ width: '200px' }}\n// //               >\n// //                 <option value=\"\">Select Section</option>\n// //                 <option value=\"A\">A</option>\n// //                 <option value=\"B\">B</option>\n// //                 {/* Add other section options */}\n// //               </select>\n// //             </div>\n// //             {/* Dropdown for Month */}\n// //             <div className=\"dropdown-container\" style={{ marginBottom: '20px', marginLeft: '10px', display: 'flex', flexDirection: 'column', alignItems: 'flex-start' }}>\n// //               <label htmlFor=\"monthDropdown\" className=\"dropdown-label\" style={{ marginBottom: '8px' }}>Month:</label>\n// //               <select\n// //                 id=\"monthDropdown\"\n// //                 value={selectedMonth}\n// //                 onChange={handleMonthChange}\n// //                 className=\"dropdown-select\"\n// //                 style={{ width: '200px' }}\n// //               >\n// //                 <option value=\"\">Select Month</option>\n// //                 <option value=\"1\">January</option>\n// //                 <option value=\"2\">February</option>\n// //                 <option value=\"3\">March</option>\n// //                 <option value=\"4\">April</option>\n// //                 <option value=\"5\">May</option>\n// //                 <option value=\"6\">June</option>\n// //                 <option value=\"7\">July</option>\n// //                 <option value=\"8\">August</option>\n// //                 <option value=\"9\">September</option>\n// //                 <option value=\"10\">October</option>\n// //                 <option value=\"11\">November</option>\n// //                 <option value=\"12\">December</option>\n// //                 {/* Add options for other months */}\n// //               </select>\n// //             </div>\n// //             {/* View Attendance button */}\n// //             <button style={{ marginLeft: '10px' }}>View Attendance</button>\n// //             {/* Fill Attendance button */}\n// //             <button style={{ marginLeft: '10px' }}>Fill Attendance</button>\n// //           </div>\n// //         )}\n// //         {/* Matrix table */}\n// //         <MatrixTable data={filteredData} /> {/* Rendering the MatrixTable component with filtered data */}\n// //       </div>\n// //     </div>\n// //   );\n// // };\n\n// // export default Navbar;\n// import React, { useState } from 'react';\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n// import { faHome } from '@fortawesome/free-solid-svg-icons';\n\n// // Sample attendance data\n// const initialAttendanceData = [\n//   { sno: 1, rollNo: '001', studentName: 'John Doe', class: '9', section: 'A', present: 'Yes', absent: 'No', leave: 'No', month: 1 },\n//   { sno: 2, rollNo: '002', studentName: 'Jane Smith', class: '9', section: 'A', present: 'No', absent: 'Yes', leave: 'No', month: 2 },\n//   { sno: 3, rollNo: '003', studentName: 'Michael Johnson', class: '9', section: 'A', present: 'No', absent: 'No', leave: 'Yes', month: 3 }\n// ];\n\n// // MatrixTable component to display attendance data in a table\n// const MatrixTable = ({ data }) => {\n//   return (\n//     <div style={{ width: '100%', marginLeft: 'auto' }}>\n//       <table border=\"1\" style={{ width: '100%' }}>\n//         {/* Table header */}\n//         <thead style={{ backgroundColor: '#5DADE2' }}>\n//           <tr>\n//             <th>S.No</th>\n//             <th>Roll No</th>\n//             <th>Student Name</th>\n//             <th>Class</th>\n//             <th>Section</th>\n//             <th>Present</th>\n//             <th>Absent</th>\n//             <th>Leave</th>\n//           </tr>\n//         </thead>\n//         {/* Table body */}\n//         <tbody>\n//           {/* Mapping through attendance data to display rows */}\n//           {data.map((record, idx) => (\n//             <tr key={idx}>\n//               <td>{record.sno}</td>\n//               <td>{record.rollNo}</td>\n//               <td>{record.studentName}</td>\n//               <td>{record.class}</td>\n//               <td>{record.section}</td>\n//               <td>{record.present}</td>\n//               <td>{record.absent}</td>\n//               <td>{record.leave}</td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n//     </div>\n//   );\n// };\n\n// // Navbar component\n// const Navbar = () => {\n//   // State variables\n//   const [selectedClass, setSelectedClass] = useState(''); // Selected class\n//   const [selectedSection, setSelectedSection] = useState(''); // Selected section\n//   const [selectedMonth, setSelectedMonth] = useState(''); // Selected month\n//   const [searchTerm, setSearchTerm] = useState(''); // Search term\n//   const [filteredData, setFilteredData] = useState(initialAttendanceData); // Filtered data state\n//   const [attendanceType, setAttendanceType] = useState('self'); // Attendance type (self or class)\n\n//   // Event handlers for dropdown and input changes\n//   const handleClassChange = (event) => {\n//     setSelectedClass(event.target.value); // Update selected class state\n//     filterData(event.target.value, selectedSection, selectedMonth); // Filter data based on class change\n//   };\n\n//   const handleSectionChange = (event) => {\n//     setSelectedSection(event.target.value); // Update selected section state\n//     filterData(selectedClass, event.target.value, selectedMonth); // Filter data based on section change\n//   };\n\n//   const handleMonthChange = (event) => {\n//     setSelectedMonth(event.target.value); // Update selected month state\n//     filterData(selectedClass, selectedSection, event.target.value); // Filter data based on month change\n//   };\n\n//   const handleAttendanceTypeChange = (event) => {\n//     setAttendanceType(event.target.value); // Update attendance type (self or class)\n//   };\n\n//   const filterData = (classValue, sectionValue, monthValue) => {\n//     let filtered = initialAttendanceData;\n//     if (classValue) {\n//       filtered = filtered.filter(record => record.class === classValue);\n//     }\n//     if (sectionValue) {\n//       filtered = filtered.filter(record => record.section === sectionValue);\n//     }\n//     if (monthValue) {\n//       filtered = filtered.filter(record => record.month === parseInt(monthValue));\n//     }\n//     setFilteredData(filtered);\n//   };\n\n//   return (\n//     <div className='containerStyle' style={{ alignItems: 'center', backgroundColor: 'white' }}>\n//       {/* Navbar header */}\n//       <div style={{ color: 'black', textAlign: 'left', backgroundColor: '#5DADE2', height: '10vh' }}>\n//         <h1>Staff </h1> {/* Main heading */}\n//         <a className=\"nav-link\" href=\"\" style={{ position: 'absolute', left: 0, top: 0 }}>\n//           <FontAwesomeIcon icon={faHome} style={{ background: 'none', height: '26px', marginTop: '35px', marginLeft: '1450px' }} />\n//         </a>\n//       </div>\n//       {/* Dropdown for Attendance Type */}\n//       <div style={{ display: 'flex', alignItems: 'center', marginBottom: '10px' }}>\n//         {/* Attendance header */}\n//         <h2 style={{ fontSize: '10px', marginRight: '10px' }}>Attendance</h2>\n//         <select\n//           value={attendanceType}\n//           onChange={handleAttendanceTypeChange}\n//           style={{ width: '100px' }}\n//         >\n//           <option value=\"self\">Self</option>\n//           <option value=\"class\">Class</option>\n//         </select>\n//       </div>\n//       <hr style={{ width: '100%', height: '2px', backgroundColor: 'black', margin: '10px 0' }} />\n\n//       {/* Attendance filling and viewing section */}\n//       <div style={{ display: 'flex', alignItems: 'center', marginBottom: '10px', flexDirection: 'column' }}>\n//         {/* Section and Month dropdowns */}\n//         {attendanceType === 'class' && (\n//           <div style={{ display: 'flex', marginBottom: '10px', alignItems: 'center' }}>\n//             {/* Dropdown for Class */}\n//             <div className=\"dropdown-container\" style={{ marginBottom: '15px', display: 'flex', flexDirection: 'column', alignItems: 'flex-start' }}>\n//               <label htmlFor=\"classDropdown\" className=\"dropdown-label\" style={{ marginBottom: '8px' }}>Class:</label>\n//               <select\n//                 id=\"classDropdown\"\n//                 value={selectedClass}\n//                 onChange={handleClassChange}\n//                 className=\"dropdown-select\"\n//                 style={{ width: '200px' }}\n//               >\n//                 <option value=\"\">Select Class</option>\n//                 <option value=\"1\">1</option>\n//                 <option value=\"2\">2</option>\n//               </select>\n//             </div>\n//             {/* Dropdown for Section */}\n//             <div className=\"dropdown-container\" style={{ marginBottom: '15px', marginLeft: '10px', display: 'flex', flexDirection: 'column', alignItems: 'flex-start' }}>\n//               {/* Dropdown for Section Header (positioned at the top) */}\n//               <label htmlFor=\"sectionDropdown\" className=\"dropdown-label\" style={{ marginBottom: '8px' }}>Section:</label>\n//               <select\n//                 id=\"sectionDropdown\"\n//                 value={selectedSection}\n//                 onChange={handleSectionChange}\n//                 className=\"dropdown-select\"\n//                 style={{ width: '200px' }}\n//               >\n//                 <option value=\"\">Select Section</option>\n//                 <option value=\"A\">A</option>\n//                 <option value=\"B\">B</option>\n//                 {/* Add other section options */}\n//               </select>\n//             </div>\n//             {/* Dropdown for Month */}\n//             <div className=\"dropdown-container\" style={{ marginBottom: '20px', marginLeft: '10px', display: 'flex', flexDirection: 'column', alignItems: 'flex-start' }}>\n//               <label htmlFor=\"monthDropdown\" className=\"dropdown-label\" style={{ marginBottom: '8px' }}>Month:</label>\n//               <select\n//                 id=\"monthDropdown\"\n//                 value={selectedMonth}\n//                 onChange={handleMonthChange}\n//                 className=\"dropdown-select\"\n//                 style={{ width: '200px' }}\n//               >\n//                 <option value=\"\">Select Month</option>\n//                 <option value=\"1\">January</option>\n//                 <option value=\"2\">February</option>\n//                 <option value=\"3\">March</option>\n//                 <option value=\"4\">April</option>\n//                 <option value=\"5\">May</option>\n//                 <option value=\"6\">June</option>\n//                 <option value=\"7\">July</option>\n//                 <option value=\"8\">August</option>\n//                 <option value=\"9\">September</option>\n//                 <option value=\"10\">October</option>\n//                 <option value=\"11\">November</option>\n//                 <option value=\"12\">December</option>\n//                 {/* Add options for other months */}\n//               </select>\n//             </div>\n//             {/* View Attendance button */}\n//             <button style={{ marginLeft: '10px' }}>View Attendance</button>\n//             {/* Fill Attendance button */}\n//             <button style={{ marginLeft: '10px' }}>Fill Attendance</button>\n//           </div>\n//         )}\n//         {/* Matrix table */}\n//         <MatrixTable data={filteredData} /> {/* Rendering the MatrixTable component with filtered data */}\n//       </div>\n//     </div>\n//   );\n// };\n\n// // export default Navbar;\n// import React, { useState } from 'react';\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n// import { faHome } from '@fortawesome/free-solid-svg-icons';\n\n// // Sample attendance data\n// const initialAttendanceData = [\n//   { sno: 1, rollNo: '001', studentName: 'John Doe', class: '9', section: 'A', present: 'Yes', absent: 'No', leave: 'No', month: 1 },\n//   { sno: 2, rollNo: '002', studentName: 'Jane Smith', class: '9', section: 'A', present: 'No', absent: 'Yes', leave: 'No', month: 2 },\n//   { sno: 3, rollNo: '003', studentName: 'Michael Johnson', class: '9', section: 'A', present: 'No', absent: 'No', leave: 'Yes', month: 3 }\n// ];\n\n// // MatrixTable component to display attendance data in a table\n// const MatrixTable = ({ data }) => {\n//   return (\n//     <div style={{ width: '100%', marginLeft: 'auto' }}>\n//       <table border=\"1\" style={{ width: '100%' }}>\n//         {/* Table header */}\n//         <thead style={{ backgroundColor: '#5DADE2' }}>\n//           <tr>\n//             <th>S.No</th>\n//             <th>Roll No</th>\n//             <th>Student Name</th>\n//             <th>Class</th>\n//             <th>Section</th>\n//             <th>Present</th>\n//             <th>Absent</th>\n//             <th>Leave</th>\n//           </tr>\n//         </thead>\n//         {/* Table body */}\n//         <tbody>\n//           {/* Mapping through attendance data to display rows */}\n//           {data.map((record, idx) => (\n//             <tr key={idx}>\n//               <td>{record.sno}</td>\n//               <td>{record.rollNo}</td>\n//               <td>{record.studentName}</td>\n//               <td>{record.class}</td>\n//               <td>{record.section}</td>\n//               <td>{record.present}</td>\n//               <td>{record.absent}</td>\n//               <td>{record.leave}</td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n//     </div>\n//   );\n// };\n\n// // Navbar component\n// const Navbar = () => {\n//   // State variables\n//   const [selectedClass, setSelectedClass] = useState(''); // Selected class\n//   const [selectedSection, setSelectedSection] = useState(''); // Selected section\n//   const [selectedMonth, setSelectedMonth] = useState(''); // Selected month\n//   const [searchTerm, setSearchTerm] = useState(''); // Search term\n//   const [filteredData, setFilteredData] = useState(initialAttendanceData); // Filtered data state\n//   const [attendanceType, setAttendanceType] = useState('self'); // Attendance type (self or class)\n\n//   // Event handlers for dropdown and input changes\n//   const handleClassChange = (event) => {\n//     setSelectedClass(event.target.value); // Update selected class state\n//     filterData(event.target.value, selectedSection, selectedMonth); // Filter data based on class change\n//   };\n\n//   const handleSectionChange = (event) => {\n//     setSelectedSection(event.target.value); // Update selected section state\n//     filterData(selectedClass, event.target.value, selectedMonth); // Filter data based on section change\n//   };\n\n//   const handleMonthChange = (event) => {\n//     setSelectedMonth(event.target.value); // Update selected month state\n//     filterData(selectedClass, selectedSection, event.target.value); // Filter data based on month change\n//   };\n\n//   const handleAttendanceTypeChange = (event) => {\n//     setAttendanceType(event.target.value); // Update attendance type (self or class)\n//   };\n\n//   const filterData = (classValue, sectionValue, monthValue) => {\n//     let filtered = initialAttendanceData;\n//     if (classValue) {\n//       filtered = filtered.filter(record => record.class === classValue);\n//     }\n//     if (sectionValue) {\n//       filtered = filtered.filter(record => record.section === sectionValue);\n//     }\n//     if (monthValue) {\n//       filtered = filtered.filter(record => record.month === parseInt(monthValue));\n//     }\n//     setFilteredData(filtered);\n//   };\n\n//   return (\n//     <div className='containerStyle' style={{ alignItems: 'center', backgroundColor: 'white' }}>\n//       {/* Navbar header */}\n//       <div style={{ color: 'black', textAlign: 'left', backgroundColor: '#5DADE2', height: '10vh' }}>\n//         <h1>Staff </h1> {/* Main heading */}\n//         <a className=\"nav-link\" href=\"\" style={{ position: 'absolute', left: 0, top: 0 }}>\n//           <FontAwesomeIcon icon={faHome} style={{ background: 'none', height: '26px', marginTop: '35px', marginLeft: '1450px' }} />\n//         </a>\n//       </div>\n//       {/* Dropdown for Attendance Type */}\n//       <div style={{ display: 'flex', alignItems: 'center', marginBottom: '10px' }}>\n//         {/* Attendance header */}\n//         <h2 style={{ fontSize: '10px', marginRight: '10px' }}>Attendance</h2>\n//         <select\n//           value={attendanceType}\n//           onChange={handleAttendanceTypeChange}\n//           style={{ width: '100px' }}\n//         >\n//           <option value=\"self\">Self</option>\n//           <option value=\"class\">Class</option>\n//         </select>\n//       </div>\n//       <hr style={{ width: '100%', height: '2px', backgroundColor: 'black', margin: '10px 0' }} />\n\n//       {/* Attendance filling and viewing section */}\n//       <div style={{ display: 'flex', alignItems: 'center', marginBottom: '10px', flexDirection: 'column' }}>\n//         {/* Section and Month dropdowns */}\n//         {attendanceType === 'class' && (\n//           <div style={{ display: 'flex', marginBottom: '10px', alignItems: 'center' }}>\n//             {/* Dropdown for Class */}\n//             <div className=\"dropdown-container\" style={{ marginBottom: '15px', display: 'flex', flexDirection: 'column', alignItems: 'flex-start' }}>\n//               <select\n//                 id=\"classDropdown\"\n//                 value={selectedClass}\n//                 onChange={handleClassChange}\n//                 className=\"dropdown-select\"\n//                 style={{ width: '200px' }}\n//               >\n//                 <option value=\"\">Select Class</option>\n//                 <option value=\"1\">1</option>\n//                 <option value=\"2\">2</option>\n//               </select>\n//             </div>\n//             {/* Dropdown for Section */}\n//             <div className=\"dropdown-container\" style={{ marginBottom: '15px', marginLeft: '10px', display: 'flex', flexDirection: 'column', alignItems: 'flex-start' }}>\n//               <select\n//                 id=\"sectionDropdown\"\n//                 value={selectedSection}\n//                 onChange={handleSectionChange}\n//                 className=\"dropdown-select\"\n//                 style={{ width: '200px' }}\n//               >\n//                 <option value=\"\">Select Section</option>\n//                 <option value=\"A\">A</option>\n//                 <option value=\"B\">B</option>\n//                 {/* Add other section options */}\n//               </select>\n//             </div>\n//             {/* Dropdown for Month */}\n//             <div className=\"dropdown-container\" style={{ marginBottom: '20px', marginLeft: '10px', display: 'flex', flexDirection: 'column', alignItems: 'flex-start' }}>\n//               <select\n//                 id=\"monthDropdown\"\n//                 value={selectedMonth}\n//                 onChange={handleMonthChange}\n//                 className=\"dropdown-select\"\n//                 style={{ width: '200px' }}\n//               >\n//                 <option value=\"\">Select Month</option>\n//                 <option value=\"1\">January</option>\n//                 <option value=\"2\">February</option>\n//                 <option value=\"3\">March</option>\n//                 <option value=\"4\">April</option>\n//                 <option value=\"5\">May</option>\n//                 <option value=\"6\">June</option>\n//                 <option value=\"7\">July</option>\n//                 <option value=\"8\">August</option>\n//                 <option value=\"9\">September</option>\n//                 <option value=\"10\">October</option>\n//                 <option value=\"11\">November</option>\n//                 <option value=\"12\">December</option>\n//                 {/* Add options for other months */}\n//               </select>\n//             </div>\n//             {/* View Attendance button */}\n//             <button style={{ marginLeft: '10px' }}>View Attendance</button>\n//             {/* Fill Attendance button */}\n//             <button style={{ marginLeft: '10px' }}>Fill Attendance</button>\n//           </div>\n//         )}\n//         {/* Matrix table */}\n//         <MatrixTable data={filteredData} /> {/* Rendering the MatrixTable component with filtered data */}\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Navbar;\n\nimport React, { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHome } from '@fortawesome/free-solid-svg-icons';\n\n// Sample attendance data\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialAttendanceData = [{\n  sno: 1,\n  rollNo: '001',\n  studentName: 'John Doe',\n  class: '9',\n  section: 'A',\n  present: 'Yes',\n  absent: 'No',\n  leave: 'No',\n  month: 1\n}, {\n  sno: 2,\n  rollNo: '002',\n  studentName: 'Jane Smith',\n  class: '9',\n  section: 'A',\n  present: 'No',\n  absent: 'Yes',\n  leave: 'No',\n  month: 2\n}, {\n  sno: 3,\n  rollNo: '003',\n  studentName: 'Michael Johnson',\n  class: '9',\n  section: 'A',\n  present: 'No',\n  absent: 'No',\n  leave: 'Yes',\n  month: 3\n}];\n\n// MatrixTable component to display attendance data in a table\nconst MatrixTable = ({\n  data\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: '100%',\n      marginLeft: 'auto'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      border: \"1\",\n      style: {\n        width: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        style: {\n          backgroundColor: '#5DADE2'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"S.No\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 602,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Roll No\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 603,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Student Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 604,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Class\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 605,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Section\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 606,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Present\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 607,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Absent\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 608,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Leave\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 609,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 601,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 600,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: data.map((record, idx) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: record.sno\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 617,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: record.rollNo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 618,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: record.studentName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 619,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: record.class\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 620,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: record.section\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 621,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: record.present\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 622,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: record.absent\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 623,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: record.leave\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 624,\n            columnNumber: 15\n          }, this)]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 616,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 613,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 598,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 597,\n    columnNumber: 5\n  }, this);\n};\n\n// Navbar component\n_c = MatrixTable;\nconst Navbar = () => {\n  _s();\n  // State variables\n  const [selectedClass, setSelectedClass] = useState(''); // Selected class\n  const [selectedSection, setSelectedSection] = useState(''); // Selected section\n  const [selectedMonth, setSelectedMonth] = useState(''); // Selected month\n  const [searchTerm, setSearchTerm] = useState(''); // Search term\n  const [filteredData, setFilteredData] = useState(initialAttendanceData); // Filtered data state\n  const [attendanceType, setAttendanceType] = useState('self'); // Attendance type (self or class)\n\n  // Event handlers for dropdown and input changes\n  const handleClassChange = event => {\n    setSelectedClass(event.target.value); // Update selected class state\n    filterData(event.target.value, selectedSection, selectedMonth); // Filter data based on class change\n  };\n  const handleSectionChange = event => {\n    setSelectedSection(event.target.value); // Update selected section state\n    filterData(selectedClass, event.target.value, selectedMonth); // Filter data based on section change\n  };\n  const handleMonthChange = event => {\n    setSelectedMonth(event.target.value); // Update selected month state\n    filterData(selectedClass, selectedSection, event.target.value); // Filter data based on month change\n  };\n  const handleAttendanceTypeChange = event => {\n    setAttendanceType(event.target.value); // Update attendance type (self or class)\n  };\n  const filterData = (classValue, sectionValue, monthValue) => {\n    let filtered = initialAttendanceData;\n    if (classValue) {\n      filtered = filtered.filter(record => record.class === classValue);\n    }\n    if (sectionValue) {\n      filtered = filtered.filter(record => record.section === sectionValue);\n    }\n    if (monthValue) {\n      filtered = filtered.filter(record => record.month === parseInt(monthValue));\n    }\n    setFilteredData(filtered);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"containerStyle\",\n    style: {\n      alignItems: 'center',\n      backgroundColor: 'white'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'black',\n        textAlign: 'left',\n        backgroundColor: '#5DADE2',\n        height: '10vh'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Staff \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 681,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"nav-link\",\n        href: \"\",\n        style: {\n          position: 'absolute',\n          left: 0,\n          top: 0\n        },\n        children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          icon: faHome,\n          style: {\n            background: 'none',\n            height: '26px',\n            marginTop: '35px',\n            marginLeft: '1450px'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 683,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 682,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 680,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        alignItems: 'center',\n        marginBottom: '10px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        style: {\n          fontSize: '10px',\n          marginRight: '10px'\n        },\n        children: \"Attendance\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 689,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: attendanceType,\n        onChange: handleAttendanceTypeChange,\n        style: {\n          width: '100px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"self\",\n          children: \"Self\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 695,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"class\",\n          children: \"Class\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 696,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 690,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 687,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      style: {\n        width: '100%',\n        height: '2px',\n        backgroundColor: 'black',\n        margin: '10px 0'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 699,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        alignItems: 'center',\n        marginBottom: '10px',\n        flexDirection: 'column'\n      },\n      children: [attendanceType === 'class' && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          marginBottom: '10px',\n          alignItems: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"classDropdown\",\n          style: {\n            marginRight: '10px'\n          },\n          children: \"Class:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 706,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"classDropdown\",\n          value: selectedClass,\n          onChange: handleClassChange,\n          style: {\n            width: '200px'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\",\n            children: \"Select Class\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 713,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"1\",\n            children: \"1\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 714,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"2\",\n            children: \"2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 715,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 707,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropdown-container\",\n          style: {\n            marginBottom: '15px',\n            marginLeft: '10px',\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'flex-start'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"classDropdown\",\n            style: {\n              marginRight: '10px'\n            },\n            children: \"Section:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 719,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"sectionDropdown\",\n            value: selectedSection,\n            onChange: handleSectionChange,\n            className: \"dropdown-select\",\n            style: {\n              width: '200px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Section\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 727,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"A\",\n              children: \"A\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 728,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"B\",\n              children: \"B\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 729,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 720,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 718,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"dropdown-container\",\n          style: {\n            marginBottom: '20px',\n            marginLeft: '10px',\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'flex-start'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"select\", {\n            id: \"monthDropdown\",\n            value: selectedMonth,\n            onChange: handleMonthChange,\n            className: \"dropdown-select\",\n            style: {\n              width: '200px'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"\",\n              children: \"Select Month\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 741,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"1\",\n              children: \"January\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 742,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"2\",\n              children: \"February\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 743,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"3\",\n              children: \"March\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 744,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"4\",\n              children: \"April\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 745,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"5\",\n              children: \"May\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 746,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"6\",\n              children: \"June\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 747,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"7\",\n              children: \"July\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 748,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"8\",\n              children: \"August\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 749,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"9\",\n              children: \"September\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 750,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"10\",\n              children: \"October\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 751,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"11\",\n              children: \"November\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 752,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"12\",\n              children: \"December\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 753,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 734,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 733,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            marginLeft: '10px'\n          },\n          children: \"View Attendance\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 757,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          style: {\n            marginLeft: '10px'\n          },\n          children: \"Fill Attendance\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 758,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 705,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(MatrixTable, {\n        data: filteredData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 761,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 702,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 678,\n    columnNumber: 5\n  }, this);\n};\n_s(Navbar, \"DLR1XXyOs8uwZweCzzRYZl7EHgc=\");\n_c2 = Navbar;\nexport default Navbar;\nvar _c, _c2;\n$RefreshReg$(_c, \"MatrixTable\");\n$RefreshReg$(_c2, \"Navbar\");","map":{"version":3,"names":["React","useState","FontAwesomeIcon","faHome","jsxDEV","_jsxDEV","initialAttendanceData","sno","rollNo","studentName","class","section","present","absent","leave","month","MatrixTable","data","style","width","marginLeft","children","border","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","map","record","idx","_c","Navbar","_s","selectedClass","setSelectedClass","selectedSection","setSelectedSection","selectedMonth","setSelectedMonth","searchTerm","setSearchTerm","filteredData","setFilteredData","attendanceType","setAttendanceType","handleClassChange","event","target","value","filterData","handleSectionChange","handleMonthChange","handleAttendanceTypeChange","classValue","sectionValue","monthValue","filtered","filter","parseInt","className","alignItems","color","textAlign","height","href","position","left","top","icon","background","marginTop","display","marginBottom","fontSize","marginRight","onChange","margin","flexDirection","htmlFor","id","_c2","$RefreshReg$"],"sources":["C:/Users/PratibhaNamdeo/OneDrive - BITTWOBYTE TECHNOLOGY PRIVATE LIMITED/React/my-app/src/Component/Staff.js"],"sourcesContent":["// // import React, { useState } from 'react';\r\n// // import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n// // import { faHome } from '@fortawesome/free-solid-svg-icons';\r\n\r\n// // // Sample attendance data\r\n// // const initialAttendanceData = [\r\n// //   { sno: 1, rollNo: '001', studentName: 'John Doe', class: '9', section: 'A', present: 'Yes', absent: 'No', leave: 'No', month: 1 },\r\n// //   { sno: 2, rollNo: '002', studentName: 'Jane Smith', class: '9', section: 'A', present: 'No', absent: 'Yes', leave: 'No', month: 2 },\r\n// //   { sno: 3, rollNo: '003', studentName: 'Michael Johnson', class: '9', section: 'A', present: 'No', absent: 'No', leave: 'Yes', month: 3 }\r\n// // ];\r\n\r\n// // // MatrixTable component to display attendance data in a table\r\n// // const MatrixTable = ({ data }) => {\r\n// //   return (\r\n// //     <div style={{ width: '100%', marginLeft: 'auto' }}>\r\n// //       <table border=\"1\" style={{ width: '100%' }}>\r\n// //         {/* Table header */}\r\n// //         <thead style={{ backgroundColor: '#5DADE2' }}>\r\n// //           <tr>\r\n// //             <th>S.No</th>\r\n// //             <th>Roll No</th>\r\n// //             <th>Student Name</th>\r\n// //             <th>Class</th>\r\n// //             <th>Section</th>\r\n// //             <th>Present</th>\r\n// //             <th>Absent</th>\r\n// //             <th>Leave</th>\r\n// //           </tr>\r\n// //         </thead>\r\n// //         {/* Table body */}\r\n// //         <tbody>\r\n// //           {/* Mapping through attendance data to display rows */}\r\n// //           {data.map((record, idx) => (\r\n// //             <tr key={idx}>\r\n// //               <td>{record.sno}</td>\r\n// //               <td>{record.rollNo}</td>\r\n// //               <td>{record.studentName}</td>\r\n// //               <td>{record.class}</td>\r\n// //               <td>{record.section}</td>\r\n// //               <td>{record.present}</td>\r\n// //               <td>{record.absent}</td>\r\n// //               <td>{record.leave}</td>\r\n// //             </tr>\r\n// //           ))}\r\n// //         </tbody>\r\n// //       </table>\r\n// //     </div>\r\n// //   );\r\n// // };\r\n\r\n// // // Navbar component\r\n// // const Navbar = () => {\r\n// //   // State variables\r\n// //   const [selectedClass, setSelectedClass] = useState(''); // Selected class\r\n// //   const [selectedSection, setSelectedSection] = useState(''); // Selected section\r\n// //   const [selectedMonth, setSelectedMonth] = useState(''); // Selected month\r\n// //   const [searchTerm, setSearchTerm] = useState(''); // Search term\r\n// //   const [filteredData, setFilteredData] = useState(initialAttendanceData); // Filtered data state\r\n// //   const [attendanceType, setAttendanceType] = useState('self'); // Attendance type (self or class)\r\n\r\n// //   // Event handlers for dropdown and input changes\r\n// //   const handleClassChange = (event) => {\r\n// //     setSelectedClass(event.target.value); // Update selected class state\r\n// //     filterData(event.target.value, selectedSection, selectedMonth); // Filter data based on class change\r\n// //   };\r\n\r\n// //   const handleSectionChange = (event) => {\r\n// //     setSelectedSection(event.target.value); // Update selected section state\r\n// //     filterData(selectedClass, event.target.value, selectedMonth); // Filter data based on section change\r\n// //   };\r\n\r\n// //   const handleMonthChange = (event) => {\r\n// //     setSelectedMonth(event.target.value); // Update selected month state\r\n// //     filterData(selectedClass, selectedSection, event.target.value); // Filter data based on month change\r\n// //   };\r\n\r\n// //   const handleAttendanceTypeChange = (event) => {\r\n// //     setAttendanceType(event.target.value); // Update attendance type (self or class)\r\n// //   };\r\n\r\n// //   const filterData = (classValue, sectionValue, monthValue) => {\r\n// //     let filtered = initialAttendanceData;\r\n// //     if (classValue) {\r\n// //       filtered = filtered.filter(record => record.class === classValue);\r\n// //     }\r\n// //     if (sectionValue) {\r\n// //       filtered = filtered.filter(record => record.section === sectionValue);\r\n// //     }\r\n// //     if (monthValue) {\r\n// //       filtered = filtered.filter(record => record.month === parseInt(monthValue));\r\n// //     }\r\n// //     setFilteredData(filtered);\r\n// //   };\r\n\r\n// //   return (\r\n// //     <div className='containerStyle' style={{ alignItems: 'center', backgroundColor: 'white' }}>\r\n// //       {/* Navbar header */}\r\n// //       <div style={{ color: 'black', textAlign: 'left', backgroundColor: '#5DADE2', height: '10vh' }}>\r\n// //         <h1>Staff </h1> {/* Main heading */}\r\n// //         <a className=\"nav-link\" href=\"\" style={{ position: 'absolute', left: 0, top: 0 }}>\r\n// //           <FontAwesomeIcon icon={faHome} style={{ background: 'none', height: '26px', marginTop: '35px', marginLeft: '1450px' }} />\r\n// //         </a>\r\n// //       </div>\r\n// //       {/* Dropdown for Attendance Type */}\r\n// //       <div style={{ display: 'flex', alignItems: 'center', marginBottom: '10px' }}>\r\n// //         {/* Attendance header */}\r\n// //         <h2 style={{ fontSize: '10px', marginRight: '10px' }}>Attendance</h2>\r\n// //         <select\r\n// //           value={attendanceType}\r\n// //           onChange={handleAttendanceTypeChange}\r\n// //           style={{ width: '100px' }}\r\n// //         >\r\n// //           <option value=\"self\">Self</option>\r\n// //           <option value=\"class\">Class</option>\r\n// //         </select>\r\n// //       </div>\r\n// //       <hr style={{ width: '100%', height: '2px', backgroundColor: 'black', margin: '10px 0' }} />\r\n\r\n// //       {/* Attendance filling and viewing section */}\r\n// //       <div style={{ display: 'flex', alignItems: 'center', marginBottom: '10px', flexDirection: 'column' }}>\r\n// //         {/* Section and Month dropdowns */}\r\n// //         {attendanceType === 'class' && (\r\n// //           <div style={{ display: 'flex', marginBottom: '10px', alignItems: 'center' }}>\r\n// //             {/* Dropdown for Class */}\r\n// //             <div className=\"dropdown-container\" style={{ marginBottom: '15px', display: 'flex', flexDirection: 'column', alignItems: 'flex-start' }}>\r\n// //               <label htmlFor=\"classDropdown\" className=\"dropdown-label\" style={{ marginBottom: '8px' }}>Class:</label>\r\n// //               <select\r\n// //                 id=\"classDropdown\"\r\n// //                 value={selectedClass}\r\n// //                 onChange={handleClassChange}\r\n// //                 className=\"dropdown-select\"\r\n// //                 style={{ width: '200px' }}\r\n// //               >\r\n// //                 <option value=\"\">Select Class</option>\r\n// //                 <option value=\"1\">1</option>\r\n// //                 <option value=\"2\">2</option>\r\n// //               </select>\r\n// //             </div>\r\n// //             {/* Dropdown for Section */}\r\n// //             <div className=\"dropdown-container\" style={{ marginBottom: '15px', marginLeft: '10px', display: 'flex', flexDirection: 'column', alignItems: 'flex-start' }}>\r\n// //               {/* Dropdown for Section Header (positioned at the top) */}\r\n// //               <label htmlFor=\"sectionDropdown\" className=\"dropdown-label\" style={{ marginBottom: '8px' }}>Section:</label>\r\n// //               <select\r\n// //                 id=\"sectionDropdown\"\r\n// //                 value={selectedSection}\r\n// //                 onChange={handleSectionChange}\r\n// //                 className=\"dropdown-select\"\r\n// //                 style={{ width: '200px' }}\r\n// //               >\r\n// //                 <option value=\"\">Select Section</option>\r\n// //                 <option value=\"A\">A</option>\r\n// //                 <option value=\"B\">B</option>\r\n// //                 {/* Add other section options */}\r\n// //               </select>\r\n// //             </div>\r\n// //             {/* Dropdown for Month */}\r\n// //             <div className=\"dropdown-container\" style={{ marginBottom: '20px', marginLeft: '10px', display: 'flex', flexDirection: 'column', alignItems: 'flex-start' }}>\r\n// //               <label htmlFor=\"monthDropdown\" className=\"dropdown-label\" style={{ marginBottom: '8px' }}>Month:</label>\r\n// //               <select\r\n// //                 id=\"monthDropdown\"\r\n// //                 value={selectedMonth}\r\n// //                 onChange={handleMonthChange}\r\n// //                 className=\"dropdown-select\"\r\n// //                 style={{ width: '200px' }}\r\n// //               >\r\n// //                 <option value=\"\">Select Month</option>\r\n// //                 <option value=\"1\">January</option>\r\n// //                 <option value=\"2\">February</option>\r\n// //                 <option value=\"3\">March</option>\r\n// //                 <option value=\"4\">April</option>\r\n// //                 <option value=\"5\">May</option>\r\n// //                 <option value=\"6\">June</option>\r\n// //                 <option value=\"7\">July</option>\r\n// //                 <option value=\"8\">August</option>\r\n// //                 <option value=\"9\">September</option>\r\n// //                 <option value=\"10\">October</option>\r\n// //                 <option value=\"11\">November</option>\r\n// //                 <option value=\"12\">December</option>\r\n// //                 {/* Add options for other months */}\r\n// //               </select>\r\n// //             </div>\r\n// //             {/* View Attendance button */}\r\n// //             <button style={{ marginLeft: '10px' }}>View Attendance</button>\r\n// //             {/* Fill Attendance button */}\r\n// //             <button style={{ marginLeft: '10px' }}>Fill Attendance</button>\r\n// //           </div>\r\n// //         )}\r\n// //         {/* Matrix table */}\r\n// //         <MatrixTable data={filteredData} /> {/* Rendering the MatrixTable component with filtered data */}\r\n// //       </div>\r\n// //     </div>\r\n// //   );\r\n// // };\r\n\r\n// // export default Navbar;\r\n// import React, { useState } from 'react';\r\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n// import { faHome } from '@fortawesome/free-solid-svg-icons';\r\n\r\n// // Sample attendance data\r\n// const initialAttendanceData = [\r\n//   { sno: 1, rollNo: '001', studentName: 'John Doe', class: '9', section: 'A', present: 'Yes', absent: 'No', leave: 'No', month: 1 },\r\n//   { sno: 2, rollNo: '002', studentName: 'Jane Smith', class: '9', section: 'A', present: 'No', absent: 'Yes', leave: 'No', month: 2 },\r\n//   { sno: 3, rollNo: '003', studentName: 'Michael Johnson', class: '9', section: 'A', present: 'No', absent: 'No', leave: 'Yes', month: 3 }\r\n// ];\r\n\r\n// // MatrixTable component to display attendance data in a table\r\n// const MatrixTable = ({ data }) => {\r\n//   return (\r\n//     <div style={{ width: '100%', marginLeft: 'auto' }}>\r\n//       <table border=\"1\" style={{ width: '100%' }}>\r\n//         {/* Table header */}\r\n//         <thead style={{ backgroundColor: '#5DADE2' }}>\r\n//           <tr>\r\n//             <th>S.No</th>\r\n//             <th>Roll No</th>\r\n//             <th>Student Name</th>\r\n//             <th>Class</th>\r\n//             <th>Section</th>\r\n//             <th>Present</th>\r\n//             <th>Absent</th>\r\n//             <th>Leave</th>\r\n//           </tr>\r\n//         </thead>\r\n//         {/* Table body */}\r\n//         <tbody>\r\n//           {/* Mapping through attendance data to display rows */}\r\n//           {data.map((record, idx) => (\r\n//             <tr key={idx}>\r\n//               <td>{record.sno}</td>\r\n//               <td>{record.rollNo}</td>\r\n//               <td>{record.studentName}</td>\r\n//               <td>{record.class}</td>\r\n//               <td>{record.section}</td>\r\n//               <td>{record.present}</td>\r\n//               <td>{record.absent}</td>\r\n//               <td>{record.leave}</td>\r\n//             </tr>\r\n//           ))}\r\n//         </tbody>\r\n//       </table>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// // Navbar component\r\n// const Navbar = () => {\r\n//   // State variables\r\n//   const [selectedClass, setSelectedClass] = useState(''); // Selected class\r\n//   const [selectedSection, setSelectedSection] = useState(''); // Selected section\r\n//   const [selectedMonth, setSelectedMonth] = useState(''); // Selected month\r\n//   const [searchTerm, setSearchTerm] = useState(''); // Search term\r\n//   const [filteredData, setFilteredData] = useState(initialAttendanceData); // Filtered data state\r\n//   const [attendanceType, setAttendanceType] = useState('self'); // Attendance type (self or class)\r\n\r\n//   // Event handlers for dropdown and input changes\r\n//   const handleClassChange = (event) => {\r\n//     setSelectedClass(event.target.value); // Update selected class state\r\n//     filterData(event.target.value, selectedSection, selectedMonth); // Filter data based on class change\r\n//   };\r\n\r\n//   const handleSectionChange = (event) => {\r\n//     setSelectedSection(event.target.value); // Update selected section state\r\n//     filterData(selectedClass, event.target.value, selectedMonth); // Filter data based on section change\r\n//   };\r\n\r\n//   const handleMonthChange = (event) => {\r\n//     setSelectedMonth(event.target.value); // Update selected month state\r\n//     filterData(selectedClass, selectedSection, event.target.value); // Filter data based on month change\r\n//   };\r\n\r\n//   const handleAttendanceTypeChange = (event) => {\r\n//     setAttendanceType(event.target.value); // Update attendance type (self or class)\r\n//   };\r\n\r\n//   const filterData = (classValue, sectionValue, monthValue) => {\r\n//     let filtered = initialAttendanceData;\r\n//     if (classValue) {\r\n//       filtered = filtered.filter(record => record.class === classValue);\r\n//     }\r\n//     if (sectionValue) {\r\n//       filtered = filtered.filter(record => record.section === sectionValue);\r\n//     }\r\n//     if (monthValue) {\r\n//       filtered = filtered.filter(record => record.month === parseInt(monthValue));\r\n//     }\r\n//     setFilteredData(filtered);\r\n//   };\r\n\r\n//   return (\r\n//     <div className='containerStyle' style={{ alignItems: 'center', backgroundColor: 'white' }}>\r\n//       {/* Navbar header */}\r\n//       <div style={{ color: 'black', textAlign: 'left', backgroundColor: '#5DADE2', height: '10vh' }}>\r\n//         <h1>Staff </h1> {/* Main heading */}\r\n//         <a className=\"nav-link\" href=\"\" style={{ position: 'absolute', left: 0, top: 0 }}>\r\n//           <FontAwesomeIcon icon={faHome} style={{ background: 'none', height: '26px', marginTop: '35px', marginLeft: '1450px' }} />\r\n//         </a>\r\n//       </div>\r\n//       {/* Dropdown for Attendance Type */}\r\n//       <div style={{ display: 'flex', alignItems: 'center', marginBottom: '10px' }}>\r\n//         {/* Attendance header */}\r\n//         <h2 style={{ fontSize: '10px', marginRight: '10px' }}>Attendance</h2>\r\n//         <select\r\n//           value={attendanceType}\r\n//           onChange={handleAttendanceTypeChange}\r\n//           style={{ width: '100px' }}\r\n//         >\r\n//           <option value=\"self\">Self</option>\r\n//           <option value=\"class\">Class</option>\r\n//         </select>\r\n//       </div>\r\n//       <hr style={{ width: '100%', height: '2px', backgroundColor: 'black', margin: '10px 0' }} />\r\n\r\n//       {/* Attendance filling and viewing section */}\r\n//       <div style={{ display: 'flex', alignItems: 'center', marginBottom: '10px', flexDirection: 'column' }}>\r\n//         {/* Section and Month dropdowns */}\r\n//         {attendanceType === 'class' && (\r\n//           <div style={{ display: 'flex', marginBottom: '10px', alignItems: 'center' }}>\r\n//             {/* Dropdown for Class */}\r\n//             <div className=\"dropdown-container\" style={{ marginBottom: '15px', display: 'flex', flexDirection: 'column', alignItems: 'flex-start' }}>\r\n//               <label htmlFor=\"classDropdown\" className=\"dropdown-label\" style={{ marginBottom: '8px' }}>Class:</label>\r\n//               <select\r\n//                 id=\"classDropdown\"\r\n//                 value={selectedClass}\r\n//                 onChange={handleClassChange}\r\n//                 className=\"dropdown-select\"\r\n//                 style={{ width: '200px' }}\r\n//               >\r\n//                 <option value=\"\">Select Class</option>\r\n//                 <option value=\"1\">1</option>\r\n//                 <option value=\"2\">2</option>\r\n//               </select>\r\n//             </div>\r\n//             {/* Dropdown for Section */}\r\n//             <div className=\"dropdown-container\" style={{ marginBottom: '15px', marginLeft: '10px', display: 'flex', flexDirection: 'column', alignItems: 'flex-start' }}>\r\n//               {/* Dropdown for Section Header (positioned at the top) */}\r\n//               <label htmlFor=\"sectionDropdown\" className=\"dropdown-label\" style={{ marginBottom: '8px' }}>Section:</label>\r\n//               <select\r\n//                 id=\"sectionDropdown\"\r\n//                 value={selectedSection}\r\n//                 onChange={handleSectionChange}\r\n//                 className=\"dropdown-select\"\r\n//                 style={{ width: '200px' }}\r\n//               >\r\n//                 <option value=\"\">Select Section</option>\r\n//                 <option value=\"A\">A</option>\r\n//                 <option value=\"B\">B</option>\r\n//                 {/* Add other section options */}\r\n//               </select>\r\n//             </div>\r\n//             {/* Dropdown for Month */}\r\n//             <div className=\"dropdown-container\" style={{ marginBottom: '20px', marginLeft: '10px', display: 'flex', flexDirection: 'column', alignItems: 'flex-start' }}>\r\n//               <label htmlFor=\"monthDropdown\" className=\"dropdown-label\" style={{ marginBottom: '8px' }}>Month:</label>\r\n//               <select\r\n//                 id=\"monthDropdown\"\r\n//                 value={selectedMonth}\r\n//                 onChange={handleMonthChange}\r\n//                 className=\"dropdown-select\"\r\n//                 style={{ width: '200px' }}\r\n//               >\r\n//                 <option value=\"\">Select Month</option>\r\n//                 <option value=\"1\">January</option>\r\n//                 <option value=\"2\">February</option>\r\n//                 <option value=\"3\">March</option>\r\n//                 <option value=\"4\">April</option>\r\n//                 <option value=\"5\">May</option>\r\n//                 <option value=\"6\">June</option>\r\n//                 <option value=\"7\">July</option>\r\n//                 <option value=\"8\">August</option>\r\n//                 <option value=\"9\">September</option>\r\n//                 <option value=\"10\">October</option>\r\n//                 <option value=\"11\">November</option>\r\n//                 <option value=\"12\">December</option>\r\n//                 {/* Add options for other months */}\r\n//               </select>\r\n//             </div>\r\n//             {/* View Attendance button */}\r\n//             <button style={{ marginLeft: '10px' }}>View Attendance</button>\r\n//             {/* Fill Attendance button */}\r\n//             <button style={{ marginLeft: '10px' }}>Fill Attendance</button>\r\n//           </div>\r\n//         )}\r\n//         {/* Matrix table */}\r\n//         <MatrixTable data={filteredData} /> {/* Rendering the MatrixTable component with filtered data */}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// // export default Navbar;\r\n// import React, { useState } from 'react';\r\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n// import { faHome } from '@fortawesome/free-solid-svg-icons';\r\n\r\n// // Sample attendance data\r\n// const initialAttendanceData = [\r\n//   { sno: 1, rollNo: '001', studentName: 'John Doe', class: '9', section: 'A', present: 'Yes', absent: 'No', leave: 'No', month: 1 },\r\n//   { sno: 2, rollNo: '002', studentName: 'Jane Smith', class: '9', section: 'A', present: 'No', absent: 'Yes', leave: 'No', month: 2 },\r\n//   { sno: 3, rollNo: '003', studentName: 'Michael Johnson', class: '9', section: 'A', present: 'No', absent: 'No', leave: 'Yes', month: 3 }\r\n// ];\r\n\r\n// // MatrixTable component to display attendance data in a table\r\n// const MatrixTable = ({ data }) => {\r\n//   return (\r\n//     <div style={{ width: '100%', marginLeft: 'auto' }}>\r\n//       <table border=\"1\" style={{ width: '100%' }}>\r\n//         {/* Table header */}\r\n//         <thead style={{ backgroundColor: '#5DADE2' }}>\r\n//           <tr>\r\n//             <th>S.No</th>\r\n//             <th>Roll No</th>\r\n//             <th>Student Name</th>\r\n//             <th>Class</th>\r\n//             <th>Section</th>\r\n//             <th>Present</th>\r\n//             <th>Absent</th>\r\n//             <th>Leave</th>\r\n//           </tr>\r\n//         </thead>\r\n//         {/* Table body */}\r\n//         <tbody>\r\n//           {/* Mapping through attendance data to display rows */}\r\n//           {data.map((record, idx) => (\r\n//             <tr key={idx}>\r\n//               <td>{record.sno}</td>\r\n//               <td>{record.rollNo}</td>\r\n//               <td>{record.studentName}</td>\r\n//               <td>{record.class}</td>\r\n//               <td>{record.section}</td>\r\n//               <td>{record.present}</td>\r\n//               <td>{record.absent}</td>\r\n//               <td>{record.leave}</td>\r\n//             </tr>\r\n//           ))}\r\n//         </tbody>\r\n//       </table>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// // Navbar component\r\n// const Navbar = () => {\r\n//   // State variables\r\n//   const [selectedClass, setSelectedClass] = useState(''); // Selected class\r\n//   const [selectedSection, setSelectedSection] = useState(''); // Selected section\r\n//   const [selectedMonth, setSelectedMonth] = useState(''); // Selected month\r\n//   const [searchTerm, setSearchTerm] = useState(''); // Search term\r\n//   const [filteredData, setFilteredData] = useState(initialAttendanceData); // Filtered data state\r\n//   const [attendanceType, setAttendanceType] = useState('self'); // Attendance type (self or class)\r\n\r\n//   // Event handlers for dropdown and input changes\r\n//   const handleClassChange = (event) => {\r\n//     setSelectedClass(event.target.value); // Update selected class state\r\n//     filterData(event.target.value, selectedSection, selectedMonth); // Filter data based on class change\r\n//   };\r\n\r\n//   const handleSectionChange = (event) => {\r\n//     setSelectedSection(event.target.value); // Update selected section state\r\n//     filterData(selectedClass, event.target.value, selectedMonth); // Filter data based on section change\r\n//   };\r\n\r\n//   const handleMonthChange = (event) => {\r\n//     setSelectedMonth(event.target.value); // Update selected month state\r\n//     filterData(selectedClass, selectedSection, event.target.value); // Filter data based on month change\r\n//   };\r\n\r\n//   const handleAttendanceTypeChange = (event) => {\r\n//     setAttendanceType(event.target.value); // Update attendance type (self or class)\r\n//   };\r\n\r\n//   const filterData = (classValue, sectionValue, monthValue) => {\r\n//     let filtered = initialAttendanceData;\r\n//     if (classValue) {\r\n//       filtered = filtered.filter(record => record.class === classValue);\r\n//     }\r\n//     if (sectionValue) {\r\n//       filtered = filtered.filter(record => record.section === sectionValue);\r\n//     }\r\n//     if (monthValue) {\r\n//       filtered = filtered.filter(record => record.month === parseInt(monthValue));\r\n//     }\r\n//     setFilteredData(filtered);\r\n//   };\r\n\r\n//   return (\r\n//     <div className='containerStyle' style={{ alignItems: 'center', backgroundColor: 'white' }}>\r\n//       {/* Navbar header */}\r\n//       <div style={{ color: 'black', textAlign: 'left', backgroundColor: '#5DADE2', height: '10vh' }}>\r\n//         <h1>Staff </h1> {/* Main heading */}\r\n//         <a className=\"nav-link\" href=\"\" style={{ position: 'absolute', left: 0, top: 0 }}>\r\n//           <FontAwesomeIcon icon={faHome} style={{ background: 'none', height: '26px', marginTop: '35px', marginLeft: '1450px' }} />\r\n//         </a>\r\n//       </div>\r\n//       {/* Dropdown for Attendance Type */}\r\n//       <div style={{ display: 'flex', alignItems: 'center', marginBottom: '10px' }}>\r\n//         {/* Attendance header */}\r\n//         <h2 style={{ fontSize: '10px', marginRight: '10px' }}>Attendance</h2>\r\n//         <select\r\n//           value={attendanceType}\r\n//           onChange={handleAttendanceTypeChange}\r\n//           style={{ width: '100px' }}\r\n//         >\r\n//           <option value=\"self\">Self</option>\r\n//           <option value=\"class\">Class</option>\r\n//         </select>\r\n//       </div>\r\n//       <hr style={{ width: '100%', height: '2px', backgroundColor: 'black', margin: '10px 0' }} />\r\n\r\n//       {/* Attendance filling and viewing section */}\r\n//       <div style={{ display: 'flex', alignItems: 'center', marginBottom: '10px', flexDirection: 'column' }}>\r\n//         {/* Section and Month dropdowns */}\r\n//         {attendanceType === 'class' && (\r\n//           <div style={{ display: 'flex', marginBottom: '10px', alignItems: 'center' }}>\r\n//             {/* Dropdown for Class */}\r\n//             <div className=\"dropdown-container\" style={{ marginBottom: '15px', display: 'flex', flexDirection: 'column', alignItems: 'flex-start' }}>\r\n//               <select\r\n//                 id=\"classDropdown\"\r\n//                 value={selectedClass}\r\n//                 onChange={handleClassChange}\r\n//                 className=\"dropdown-select\"\r\n//                 style={{ width: '200px' }}\r\n//               >\r\n//                 <option value=\"\">Select Class</option>\r\n//                 <option value=\"1\">1</option>\r\n//                 <option value=\"2\">2</option>\r\n//               </select>\r\n//             </div>\r\n//             {/* Dropdown for Section */}\r\n//             <div className=\"dropdown-container\" style={{ marginBottom: '15px', marginLeft: '10px', display: 'flex', flexDirection: 'column', alignItems: 'flex-start' }}>\r\n//               <select\r\n//                 id=\"sectionDropdown\"\r\n//                 value={selectedSection}\r\n//                 onChange={handleSectionChange}\r\n//                 className=\"dropdown-select\"\r\n//                 style={{ width: '200px' }}\r\n//               >\r\n//                 <option value=\"\">Select Section</option>\r\n//                 <option value=\"A\">A</option>\r\n//                 <option value=\"B\">B</option>\r\n//                 {/* Add other section options */}\r\n//               </select>\r\n//             </div>\r\n//             {/* Dropdown for Month */}\r\n//             <div className=\"dropdown-container\" style={{ marginBottom: '20px', marginLeft: '10px', display: 'flex', flexDirection: 'column', alignItems: 'flex-start' }}>\r\n//               <select\r\n//                 id=\"monthDropdown\"\r\n//                 value={selectedMonth}\r\n//                 onChange={handleMonthChange}\r\n//                 className=\"dropdown-select\"\r\n//                 style={{ width: '200px' }}\r\n//               >\r\n//                 <option value=\"\">Select Month</option>\r\n//                 <option value=\"1\">January</option>\r\n//                 <option value=\"2\">February</option>\r\n//                 <option value=\"3\">March</option>\r\n//                 <option value=\"4\">April</option>\r\n//                 <option value=\"5\">May</option>\r\n//                 <option value=\"6\">June</option>\r\n//                 <option value=\"7\">July</option>\r\n//                 <option value=\"8\">August</option>\r\n//                 <option value=\"9\">September</option>\r\n//                 <option value=\"10\">October</option>\r\n//                 <option value=\"11\">November</option>\r\n//                 <option value=\"12\">December</option>\r\n//                 {/* Add options for other months */}\r\n//               </select>\r\n//             </div>\r\n//             {/* View Attendance button */}\r\n//             <button style={{ marginLeft: '10px' }}>View Attendance</button>\r\n//             {/* Fill Attendance button */}\r\n//             <button style={{ marginLeft: '10px' }}>Fill Attendance</button>\r\n//           </div>\r\n//         )}\r\n//         {/* Matrix table */}\r\n//         <MatrixTable data={filteredData} /> {/* Rendering the MatrixTable component with filtered data */}\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Navbar;\r\n\r\nimport React, { useState } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faHome } from '@fortawesome/free-solid-svg-icons';\r\n\r\n// Sample attendance data\r\nconst initialAttendanceData = [\r\n  { sno: 1, rollNo: '001', studentName: 'John Doe', class: '9', section: 'A', present: 'Yes', absent: 'No', leave: 'No', month: 1 },\r\n  { sno: 2, rollNo: '002', studentName: 'Jane Smith', class: '9', section: 'A', present: 'No', absent: 'Yes', leave: 'No', month: 2 },\r\n  { sno: 3, rollNo: '003', studentName: 'Michael Johnson', class: '9', section: 'A', present: 'No', absent: 'No', leave: 'Yes', month: 3 }\r\n];\r\n\r\n// MatrixTable component to display attendance data in a table\r\nconst MatrixTable = ({ data }) => {\r\n  return (\r\n    <div style={{ width: '100%', marginLeft: 'auto' }}>\r\n      <table border=\"1\" style={{ width: '100%' }}>\r\n        {/* Table header */}\r\n        <thead style={{ backgroundColor: '#5DADE2' }}>\r\n          <tr>\r\n            <th>S.No</th>\r\n            <th>Roll No</th>\r\n            <th>Student Name</th>\r\n            <th>Class</th>\r\n            <th>Section</th>\r\n            <th>Present</th>\r\n            <th>Absent</th>\r\n            <th>Leave</th>\r\n          </tr>\r\n        </thead>\r\n        {/* Table body */}\r\n        <tbody>\r\n          {/* Mapping through attendance data to display rows */}\r\n          {data.map((record, idx) => (\r\n            <tr key={idx}>\r\n              <td>{record.sno}</td>\r\n              <td>{record.rollNo}</td>\r\n              <td>{record.studentName}</td>\r\n              <td>{record.class}</td>\r\n              <td>{record.section}</td>\r\n              <td>{record.present}</td>\r\n              <td>{record.absent}</td>\r\n              <td>{record.leave}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Navbar component\r\nconst Navbar = () => {\r\n  // State variables\r\n  const [selectedClass, setSelectedClass] = useState(''); // Selected class\r\n  const [selectedSection, setSelectedSection] = useState(''); // Selected section\r\n  const [selectedMonth, setSelectedMonth] = useState(''); // Selected month\r\n  const [searchTerm, setSearchTerm] = useState(''); // Search term\r\n  const [filteredData, setFilteredData] = useState(initialAttendanceData); // Filtered data state\r\n  const [attendanceType, setAttendanceType] = useState('self'); // Attendance type (self or class)\r\n\r\n  // Event handlers for dropdown and input changes\r\n  const handleClassChange = (event) => {\r\n    setSelectedClass(event.target.value); // Update selected class state\r\n    filterData(event.target.value, selectedSection, selectedMonth); // Filter data based on class change\r\n  };\r\n\r\n  const handleSectionChange = (event) => {\r\n    setSelectedSection(event.target.value); // Update selected section state\r\n    filterData(selectedClass, event.target.value, selectedMonth); // Filter data based on section change\r\n  };\r\n\r\n  const handleMonthChange = (event) => {\r\n    setSelectedMonth(event.target.value); // Update selected month state\r\n    filterData(selectedClass, selectedSection, event.target.value); // Filter data based on month change\r\n  };\r\n\r\n  const handleAttendanceTypeChange = (event) => {\r\n    setAttendanceType(event.target.value); // Update attendance type (self or class)\r\n  };\r\n\r\n  const filterData = (classValue, sectionValue, monthValue) => {\r\n    let filtered = initialAttendanceData;\r\n    if (classValue) {\r\n      filtered = filtered.filter(record => record.class === classValue);\r\n    }\r\n    if (sectionValue) {\r\n      filtered = filtered.filter(record => record.section === sectionValue);\r\n    }\r\n    if (monthValue) {\r\n      filtered = filtered.filter(record => record.month === parseInt(monthValue));\r\n    }\r\n    setFilteredData(filtered);\r\n  };\r\n\r\n  return (\r\n    <div className='containerStyle' style={{ alignItems: 'center', backgroundColor: 'white' }}>\r\n      {/* Navbar header */}\r\n      <div style={{ color: 'black', textAlign: 'left', backgroundColor: '#5DADE2', height: '10vh' }}>\r\n        <h1>Staff </h1> {/* Main heading */}\r\n        <a className=\"nav-link\" href=\"\" style={{ position: 'absolute', left: 0, top: 0 }}>\r\n          <FontAwesomeIcon icon={faHome} style={{ background: 'none', height: '26px', marginTop: '35px', marginLeft: '1450px' }} />\r\n        </a>\r\n      </div>\r\n      {/* Dropdown for Attendance Type */}\r\n      <div style={{ display: 'flex', alignItems: 'center', marginBottom: '10px' }}>\r\n        {/* Attendance header */}\r\n        <h2 style={{ fontSize: '10px', marginRight: '10px' }}>Attendance</h2>\r\n        <select\r\n          value={attendanceType}\r\n          onChange={handleAttendanceTypeChange}\r\n          style={{ width: '100px' }}\r\n        >\r\n          <option value=\"self\">Self</option>\r\n          <option value=\"class\">Class</option>\r\n        </select>\r\n      </div>\r\n      <hr style={{ width: '100%', height: '2px', backgroundColor: 'black', margin: '10px 0' }} />\r\n\r\n      {/* Attendance filling and viewing section */}\r\n      <div style={{ display: 'flex', alignItems: 'center', marginBottom: '10px', flexDirection: 'column' }}>\r\n        {/* Section and Month dropdowns */}\r\n        {attendanceType === 'class' && (\r\n          <div style={{ display: 'flex', marginBottom: '10px', alignItems: 'center' }}>\r\n            <label htmlFor=\"classDropdown\" style={{ marginRight: '10px' }}>Class:</label>\r\n            <select\r\n              id=\"classDropdown\"\r\n              value={selectedClass}\r\n              onChange={handleClassChange}\r\n              style={{ width: '200px' }}\r\n            >\r\n              <option value=\"\">Select Class</option>\r\n              <option value=\"1\">1</option>\r\n              <option value=\"2\">2</option>\r\n            </select>\r\n             {/* Attendance filling and viewing section */}\r\n            <div className=\"dropdown-container\" style={{ marginBottom: '15px', marginLeft: '10px', display: 'flex', flexDirection: 'column', alignItems: 'flex-start' }}>\r\n            <label htmlFor=\"classDropdown\" style={{ marginRight: '10px' }}>Section:</label>\r\n              <select\r\n                id=\"sectionDropdown\"\r\n                value={selectedSection}\r\n                onChange={handleSectionChange}\r\n                className=\"dropdown-select\"\r\n                style={{ width: '200px' }}\r\n              >\r\n                <option value=\"\">Select Section</option>\r\n                <option value=\"A\">A</option>\r\n                <option value=\"B\">B</option>\r\n                {/* Add other section options */}\r\n              </select>\r\n            </div>\r\n            <div className=\"dropdown-container\" style={{ marginBottom: '20px', marginLeft: '10px', display: 'flex', flexDirection: 'column', alignItems: 'flex-start' }}>\r\n              <select\r\n                id=\"monthDropdown\"\r\n                value={selectedMonth}\r\n                onChange={handleMonthChange}\r\n                className=\"dropdown-select\"\r\n                style={{ width: '200px' }}\r\n              >\r\n                <option value=\"\">Select Month</option>\r\n                <option value=\"1\">January</option>\r\n                <option value=\"2\">February</option>\r\n                <option value=\"3\">March</option>\r\n                <option value=\"4\">April</option>\r\n                <option value=\"5\">May</option>\r\n                <option value=\"6\">June</option>\r\n                <option value=\"7\">July</option>\r\n                <option value=\"8\">August</option>\r\n                <option value=\"9\">September</option>\r\n                <option value=\"10\">October</option>\r\n                <option value=\"11\">November</option>\r\n                <option value=\"12\">December</option>\r\n                {/* Add options for other months */}\r\n              </select>\r\n            </div>\r\n            <button style={{ marginLeft: '10px' }}>View Attendance</button>\r\n            <button style={{ marginLeft: '10px' }}>Fill Attendance</button>\r\n          </div>\r\n        )}\r\n        <MatrixTable data={filteredData} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}