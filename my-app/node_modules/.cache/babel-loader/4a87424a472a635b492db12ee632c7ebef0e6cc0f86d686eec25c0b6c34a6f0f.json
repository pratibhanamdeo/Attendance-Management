{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PratibhaNamdeo\\\\OneDrive - BITTWOBYTE TECHNOLOGY PRIVATE LIMITED\\\\React\\\\my-app\\\\src\\\\Component\\\\Attendance.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n// import { faHome } from '@fortawesome/free-solid-svg-icons';\n// import './Attendance.css'; // Import the CSS file for styling\n// import { Link } from 'react-router-dom';\n// // import 'bootstrap/dist/css/bootstrap.min.css';\n\n// const Attendance = () => {\n//   const [selectedMedium, setSelectedMedium] = useState('Hindi');\n//   const [selectedSession, setSelectedSession] = useState('2013-14');\n//   const [roleDetails, setRoleDetails] = useState(null);\n//   const [selectedRole, setSelectedRole] = useState(null);\n//   const [selectedClass, setSelectedClass] = useState('1');\n//   const [selectedSection, setSelectedSection] = useState(null);\n//   const [selectedDate, setSelectedDate] = useState(null);\n//   const [attendanceData, setAttendanceData] = useState([]);\n//   const [existingData, setExistingData] = useState([\n//     { id: 1, name: 'John Doe', class: '9', section: 'A', rollNo: '001' },\n//     { id: 2, name: 'Jane Smith', class: '9', section: 'A', rollNo: '002' },\n//     { id: 3, name: 'Michael Johnson', class: '9', section: 'A', rollNo: '003' },\n//   ]);\n//   const [adminClicked, setAdminClicked] = useState(false); // Track if Admin button is clicked\n\n//   const handleMediumChange = (e) => setSelectedMedium(e.target.value);\n//   const handleSessionChange = (e) => setSelectedSession(e.target.value);\n//   const handleRoleClick = (role) => {\n//     if (role === 'Admin') {\n//       setRoleDetails({ name: 'Admin', description: 'Admin details here' });\n//       setSelectedRole('Admin');\n//       setAdminClicked(true); // Set adminClicked to true when Admin button is clicked\n//     } else if (role === 'Staff') {\n//       setRoleDetails({ name: 'Staff', description: 'Staff details here' });\n//       setSelectedRole('Staff');\n//     } else if (role === 'Student') {\n//       setRoleDetails({ name: 'Student', description: 'Student details here' });\n//       setSelectedRole('Student');\n//     }\n//   };\n//   const handleSectionClick = (section) => setSelectedSection(section);\n//   const handleDateChange = (e) => setSelectedDate(e.target.value);\n\n//   const handleFetchAttendance = () => {\n//     // Fetch attendance data based on selectedClass, selectedSection, and selectedDate\n//     // Dummy data used for demonstration\n//     const dummyData = [\n//       { id: 4, name: 'Emily Watson', class: '9', section: 'B', rollNo: '004', present: 20, absent: 2, leave: 3 },\n//       { id: 5, name: 'Daniel Brown', class: '9', section: 'B', rollNo: '005', present: 21, absent: 1, leave: 1 },\n//     ];\n\n//     // Merge existing data with fetched attendance data based on unique identifiers (e.g., id, rollNo)\n//     const mergedData = [...existingData];\n//     dummyData.forEach((newData) => {\n//       const existingIndex = mergedData.findIndex((data) => data.rollNo === newData.rollNo);\n//       if (existingIndex !== -1) {\n//         mergedData[existingIndex] = { ...mergedData[existingIndex], ...newData };\n//       } else {\n//         mergedData.push(newData);\n//       }\n//     });\n//     setExistingData(mergedData);\n//     setAttendanceData(dummyData);\n//   };\n\n//   return (\n//     <div className=\"attendance-container\">\n//       <div className=\"home-icon\">\n//         <FontAwesomeIcon icon={faHome} />\n//       </div>\n//       <div className=\"medium-session-container\">\n//         <div className=\"medium-session-title\">\n//           <label htmlFor=\"mediumDropdown\" className=\"header-label\">Medium:</label>\n//           <select\n//             id=\"mediumDropdown\"\n//             value={selectedMedium}\n//             onChange={handleMediumChange}\n//             className=\"dropdown-select\"\n//           >\n//             <option value=\"Hindi\">Hindi</option>\n//             <option value=\"English\">English</option>\n//           </select>\n//         </div>\n//         <div className=\"medium-session-title\">\n//           <label htmlFor=\"sessionDropdown\" className=\"header-label\">Session:</label>\n//           <select\n//             id=\"sessionDropdown\"\n//             value={selectedSession}\n//             onChange={handleSessionChange}\n//             className=\"dropdown-select\"\n//           >\n//             <option value=\"2012-13\">2012-13</option>\n//             <option value=\"2013-14\">2013-14</option>\n//           </select>\n//         </div>\n//       </div>\n//       <div className=\"attendance-header\">\n//         <h1 className=\"attendance-title\">Attendance Management</h1>\n//       </div>\n//       <div className=\"main-panel\">\n//         {selectedRole !== 'Admin' && (\n//           <>\n//             <button\n//               className=\"main-button\"\n//               style={{ width: '250px', height: '150px', marginRight: '100px' }}\n//               onClick={() => handleRoleClick('Admin')}\n//             >\n//               Admin\n//             </button>\n//             <button\n//               className=\"main-button\"\n//               style={{ width: '250px', height: '150px', marginRight: '100px' }}\n//               onClick={() => handleRoleClick('Staff')}\n//             >\n//               Staff\n//             </button>\n//             <button\n//               className=\"main-button\"\n//               style={{ width: '250px', height: '150px' }}\n//               onClick={() => handleRoleClick('Student')}\n//             >\n//               Student\n//             </button>\n//           </>\n//         )}\n//         {selectedRole === 'Admin' && adminClicked && (\n//           <>\n//             <button\n//               className=\"main-button\"\n//               style={{ width: '250px', height: '150px', marginRight: '100px' }}\n//               onClick={() => handleRoleClick('Staff')}\n//             >\n//               Staff View\n//             </button>\n//             <button\n//               className=\"main-button\"\n//               style={{ width: '250px', height: '150px' }}\n//               onClick={() => handleRoleClick('Student')}\n//             >\n//               Student View\n//             </button>\n//           </>\n//         )}\n//       </div>\n//       {/* Other JSX code */}\n//     </div>\n//   );\n// };\n\n// // export default Attendance;\n// import React, { useState } from 'react';\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n// import { faHome } from '@fortawesome/free-solid-svg-icons';\n// import './Attendance.css'; // Import the CSS file for styling\n// import { Link } from 'react-router-dom';\n// // import 'bootstrap/dist/css/bootstrap.min.css';\n\n// const Attendance = () => {\n//   const [selectedMedium, setSelectedMedium] = useState('Hindi');\n//   const [selectedSession, setSelectedSession] = useState('2013-14');\n//   const [roleDetails, setRoleDetails] = useState(null);\n//   const [selectedRole, setSelectedRole] = useState(null);\n//   const [selectedClass, setSelectedClass] = useState('1');\n//   const [selectedSection, setSelectedSection] = useState(null);\n//   const [selectedDate, setSelectedDate] = useState(null);\n//   const [attendanceData, setAttendanceData] = useState([]);\n//   const [existingData, setExistingData] = useState([\n//     { id: 1, name: 'John Doe', class: '9', section: 'A', rollNo: '001' },\n//     { id: 2, name: 'Jane Smith', class: '9', section: 'A', rollNo: '002' },\n//     { id: 3, name: 'Michael Johnson', class: '9', section: 'A', rollNo: '003' },\n//   ]);\n\n//   const handleMediumChange = (e) => setSelectedMedium(e.target.value);\n//   const handleSessionChange = (e) => setSelectedSession(e.target.value);\n\n//   const handleRoleClick = (role) => {\n//     if (role === 'Admin') {\n//       setRoleDetails({ name: 'Admin', description: 'Admin details here' });\n//       setSelectedRole('Admin');\n//     } else if (role === 'Staff') {\n//       setRoleDetails({ name: 'Staff', description: 'Staff details here' });\n//       setSelectedRole('Staff');\n//     } else if (role === 'Student') {\n//       setRoleDetails({ name: 'Student', description: 'Student details here' });\n//       setSelectedRole('Student');\n//     }\n//   };\n\n//   const handleSectionClick = (section) => setSelectedSection(section);\n//   const handleDateChange = (e) => setSelectedDate(e.target.value);\n\n//   const handleFetchAttendance = () => {\n//     // Fetch attendance data based on selectedClass, selectedSection, and selectedDate\n//     // Dummy data used for demonstration\n//     const dummyData = [\n//       { id: 4, name: 'Emily Watson', class: '9', section: 'B', rollNo: '004', present: 20, absent: 2, leave: 3 },\n//       { id: 5, name: 'Daniel Brown', class: '9', section: 'B', rollNo: '005', present: 21, absent: 1, leave: 1 },\n//     ];\n\n//     // Merge existing data with fetched attendance data based on unique identifiers (e.g., id, rollNo)\n//     const mergedData = [...existingData];\n//     dummyData.forEach((newData) => {\n//       const existingIndex = mergedData.findIndex((data) => data.rollNo === newData.rollNo);\n//       if (existingIndex !== -1) {\n//         mergedData[existingIndex] = { ...mergedData[existingIndex], ...newData };\n//       } else {\n//         mergedData.push(newData);\n//       }\n//     });\n//     setExistingData(mergedData);\n//     setAttendanceData(dummyData);\n//   };\n\n//   return (\n//     <div className=\"attendance-container\">\n//       <div className=\"home-icon\">\n//         <FontAwesomeIcon icon={faHome} />\n//       </div>\n//       <div className=\"medium-session-container\">\n//         <div className=\"medium-session-title\">\n//           <label htmlFor=\"mediumDropdown\" className=\"header-label\">Medium:</label>\n//           <select\n//             id=\"mediumDropdown\"\n//             value={selectedMedium}\n//             onChange={handleMediumChange}\n//             className=\"dropdown-select\"\n//           >\n//             <option value=\"Hindi\">Hindi</option>\n//             <option value=\"English\">English</option>\n//           </select>\n//         </div>\n//         <div className=\"medium-session-title\">\n//           <label htmlFor=\"sessionDropdown\" className=\"header-label\">Session:</label>\n//           <select\n//             id=\"sessionDropdown\"\n//             value={selectedSession}\n//             onChange={handleSessionChange}\n//             className=\"dropdown-select\"\n//           >\n//             <option value=\"2012-13\">2012-13</option>\n//             <option value=\"2013-14\">2013-14</option>\n//           </select>\n//         </div>\n//       </div>\n//       <div className=\"attendance-header\">\n//         <h1 className=\"attendance-title\">Attendance Management</h1>\n//       </div>\n//       <div className=\"main-panel\">\n//         <button\n//           className=\"main-button\"\n//           style={{ width: '250px', height: '150px', marginRight: '100px' }}\n//           onClick={() => handleRoleClick('Admin')}\n//         >\n//           Admin\n//         </button>\n//         {selectedRole === 'Admin' && (\n//           <>\n//             <button\n//               className=\"main-button\"\n//               style={{ width: '250px', height: '150px', marginRight: '100px' }}\n//               onClick={() => handleRoleClick('Staff')}\n//             >\n//               Staff\n//             </button>\n//             <button\n//               className=\"main-button\"\n//               style={{ width: '250px', height: '150px' }}\n//               onClick={() => handleRoleClick('Student')}\n//             >\n//               Student\n//             </button>\n//           </>\n//         )}\n//         {selectedRole === 'Staff' && (\n//           <>\n//             <button\n//               className=\"main-button\"\n//               style={{ width: '250px', height: '150px' }}\n//               onClick={() => handleRoleClick('Student')}\n//             >\n//               Student\n//             </button>\n//           </>\n//         )}\n//       </div>\n//       {/* Other JSX code */}\n//     </div>\n//   );\n// };\n\n// // export default Attendance;\n// import React, { useState } from 'react';\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n// import { faHome } from '@fortawesome/free-solid-svg-icons';\n// import './Attendance.css'; // Import the CSS file for styling\n// import { Link } from 'react-router-dom';\n// // import 'bootstrap/dist/css/bootstrap.min.css';\n\n// const Attendance = () => {\n//   // State variables for managing selected options and role details\n//   const [selectedMedium, setSelectedMedium] = useState('Hindi'); // Selected medium (Hindi or English)\n//   const [selectedSession, setSelectedSession] = useState('2013-14'); // Selected session (e.g., 2013-14)\n//   const [roleDetails, setRoleDetails] = useState(null); // Role details (Admin, Staff, Student)\n//   const [selectedRole, setSelectedRole] = useState(null); // Selected role (Admin, Staff, Student)\n//   const [selectedClass, setSelectedClass] = useState('1'); // Selected class (e.g., 1)\n//   const [selectedSection, setSelectedSection] = useState(null); // Selected section (e.g., A, B)\n//   const [selectedDate, setSelectedDate] = useState(null); // Selected date for attendance\n//   const [attendanceData, setAttendanceData] = useState([]); // Array to store attendance data\n//   const [existingData, setExistingData] = useState([ // Array of existing data (dummy data)\n//     { id: 1, name: 'John Doe', class: '9', section: 'A', rollNo: '001' },\n//     { id: 2, name: 'Jane Smith', class: '9', section: 'A', rollNo: '002' },\n//     { id: 3, name: 'Michael Johnson', class: '9', section: 'A', rollNo: '003' },\n//   ]);\n\n//   // Function to handle medium change\n//   const handleMediumChange = (e) => setSelectedMedium(e.target.value);\n\n//   // Function to handle session change\n//   const handleSessionChange = (e) => setSelectedSession(e.target.value);\n\n//   // Function to handle role button click\n//   const handleRoleClick = (role) => {\n//     if (role === 'Admin') {\n//       setRoleDetails({ name: 'Admin', description: 'Admin details here' });\n//       setSelectedRole('Admin');\n//     } else if (role === 'Staff') {\n//       setRoleDetails({ name: 'Staff', description: 'Staff details here' });\n//       setSelectedRole('Staff');\n//     } else if (role === 'Student') {\n//       setRoleDetails({ name: 'Student', description: 'Student details here' });\n//       setSelectedRole('Student');\n//     }\n//   };\n\n//   // Function to handle section click\n//   const handleSectionClick = (section) => setSelectedSection(section);\n\n//   // Function to handle date change\n//   const handleDateChange = (e) => setSelectedDate(e.target.value);\n\n//   // Dummy function to fetch attendance data (not implemented in this code snippet)\n//   const handleFetchAttendance = () => {\n//     // Dummy data used for demonstration\n//     const dummyData = [\n//       { id: 4, name: 'Emily Watson', class: '9', section: 'B', rollNo: '004', present: 20, absent: 2, leave: 3 },\n//       { id: 5, name: 'Daniel Brown', class: '9', section: 'B', rollNo: '005', present: 21, absent: 1, leave: 1 },\n//     ];\n\n//     // Merge existing data with fetched attendance data based on unique identifiers (e.g., id, rollNo)\n//     const mergedData = [...existingData];\n//     dummyData.forEach((newData) => {\n//       const existingIndex = mergedData.findIndex((data) => data.rollNo === newData.rollNo);\n//       if (existingIndex !== -1) {\n//         mergedData[existingIndex] = { ...mergedData[existingIndex], ...newData };\n//       } else {\n//         mergedData.push(newData);\n//       }\n//     });\n//     setExistingData(mergedData);\n//     setAttendanceData(dummyData);\n//   };\n\n//   return (\n//     <div className=\"attendance-container\">\n//       {/* Home icon */}\n//       <div className=\"home-icon\">\n//         <FontAwesomeIcon icon={faHome} />\n//       </div>\n//       {/* Medium and session selection */}\n//       <div className=\"medium-session-container\">\n//         <div className=\"medium-session-title\">\n//           <label htmlFor=\"mediumDropdown\" className=\"header-label\">Medium:</label>\n//           <select\n//             id=\"mediumDropdown\"\n//             value={selectedMedium}\n//             onChange={handleMediumChange}\n//             className=\"dropdown-select\"\n//           >\n//             <option value=\"Hindi\">Hindi</option>\n//             <option value=\"English\">English</option>\n//           </select>\n//         </div>\n//         <div className=\"medium-session-title\">\n//           <label htmlFor=\"sessionDropdown\" className=\"header-label\">Session:</label>\n//           <select\n//             id=\"sessionDropdown\"\n//             value={selectedSession}\n//             onChange={handleSessionChange}\n//             className=\"dropdown-select\"\n//           >\n//             <option value=\"2012-13\">2012-13</option>\n//             <option value=\"2013-14\">2013-14</option>\n//           </select>\n//         </div>\n//       </div>\n//       {/* Attendance header */}\n//       <div className=\"attendance-header\">\n//         <h1 className=\"attendance-title\">Attendance Management</h1>\n//       </div>\n//       {/* Main panel with role buttons */}\n//       <div className=\"main-panel\">\n//         {/* Admin button */}\n//         <button\n//           className=\"main-button\"\n//           style={{ width: '250px', height: '150px', marginRight: '100px' }}\n//           onClick={() => handleRoleClick('Admin')}\n//         >\n//           Admin\n//         </button>\n//         {/* Show Staff and Student buttons if Admin role is selected */}\n//         {selectedRole === 'Admin' && (\n//           <>\n//             {/* Staff button */}\n//             <button\n//               className=\"main-button\"\n//               style={{ width: '250px', height: '150px', marginRight: '100px' }}\n//               onClick={() => handleRoleClick('Staff')}\n//             >\n//               Staff\n//             </button>\n//             {/* Student button */}\n//             <button\n//               className=\"main-button\"\n//               style={{ width: '250px', height: '150px' }}\n//               onClick={() => handleRoleClick('Student')}\n//             >\n//               Student\n//             </button>\n//           </>\n//         )}\n//         {/* Show Student and  Staff  button if Staff role is selected */}\n//         {selectedRole === 'Staff' && (\n//           <>\n//             {/* Student button */}\n//             <button\n//               className=\"main-button\"\n//               style={{ width: '250px', height: '150px' }}\n//               onClick={() => handleRoleClick('Student')}\n//             >\n//               Student\n//             </button>\n//           </>\n//         )}\n//       </div>\n//       {/* Other JSX code */}\n//     </div>\n//   );\n// };\n\n// export default Attendance;import React, { useState } from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faHome } from '@fortawesome/free-solid-svg-icons';\nimport './Attendance.css'; // Import the CSS file for styling\nimport { Link } from 'react-router-dom';\n// import 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Attendance = () => {\n  _s();\n  const [selectedMedium, setSelectedMedium] = useState('Hindi');\n  const [selectedSession, setSelectedSession] = useState('2013-14');\n  const [roleDetails, setRoleDetails] = useState(null);\n  const [selectedRole, setSelectedRole] = useState(null);\n  const [selectedClass, setSelectedClass] = useState('1');\n  const [selectedSection, setSelectedSection] = useState(null);\n  const [selectedDate, setSelectedDate] = useState(null);\n  const [attendanceData, setAttendanceData] = useState([]);\n  const [existingData, setExistingData] = useState([{\n    id: 1,\n    name: 'John Doe',\n    class: '9',\n    section: 'A',\n    rollNo: '001'\n  }, {\n    id: 2,\n    name: 'Jane Smith',\n    class: '9',\n    section: 'A',\n    rollNo: '002'\n  }, {\n    id: 3,\n    name: 'Michael Johnson',\n    class: '9',\n    section: 'A',\n    rollNo: '003'\n  }]);\n  const [currentView, setCurrentView] = useState('Admin'); // Default view is Admin\n\n  const handleMediumChange = e => setSelectedMedium(e.target.value);\n  const handleSessionChange = e => setSelectedSession(e.target.value);\n  const handleRoleClick = role => {\n    if (role === 'Admin') {\n      setRoleDetails({\n        name: 'Admin',\n        description: 'Admin details here'\n      });\n      setSelectedRole('Admin');\n      setCurrentView('Admin'); // Set current view to Admin\n    } else if (role === 'Staff') {\n      setRoleDetails({\n        name: 'Staff',\n        description: 'Staff details here'\n      });\n      setSelectedRole('Staff');\n    } else if (role === 'Student') {\n      setRoleDetails({\n        name: 'Student',\n        description: 'Student details here'\n      });\n      setSelectedRole('Student');\n    }\n  };\n  const handleSectionClick = section => setSelectedSection(section);\n  const handleDateChange = e => setSelectedDate(e.target.value);\n  const handleFetchAttendance = () => {\n    // Fetch attendance data based on selectedClass, selectedSection, and selectedDate\n    // Dummy data used for demonstration\n    const dummyData = [{\n      id: 4,\n      name: 'Emily Watson',\n      class: '9',\n      section: 'B',\n      rollNo: '004',\n      present: 20,\n      absent: 2,\n      leave: 3\n    }, {\n      id: 5,\n      name: 'Daniel Brown',\n      class: '9',\n      section: 'B',\n      rollNo: '005',\n      present: 21,\n      absent: 1,\n      leave: 1\n    }];\n\n    // Merge existing data with fetched attendance data based on unique identifiers (e.g., id, rollNo)\n    const mergedData = [...existingData];\n    dummyData.forEach(newData => {\n      const existingIndex = mergedData.findIndex(data => data.rollNo === newData.rollNo);\n      if (existingIndex !== -1) {\n        mergedData[existingIndex] = {\n          ...mergedData[existingIndex],\n          ...newData\n        };\n      } else {\n        mergedData.push(newData);\n      }\n    });\n    setExistingData(mergedData);\n    setAttendanceData(dummyData);\n  };\n  const handleHomeIconClick = () => {\n    setCurrentView('Admin'); // Set current view to Admin when home icon is clicked\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"attendance-container\",\n    children: [currentView !== 'Admin' && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"home-icon\",\n      onClick: handleHomeIconClick,\n      children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        icon: faHome\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 524,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 523,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"medium-session-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"medium-session-title\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"mediumDropdown\",\n          className: \"header-label\",\n          children: \"Medium:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 531,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"mediumDropdown\",\n          value: selectedMedium,\n          onChange: handleMediumChange,\n          className: \"dropdown-select\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"Hindi\",\n            children: \"Hindi\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 538,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"English\",\n            children: \"English\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 539,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 532,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 530,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"medium-session-title\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"sessionDropdown\",\n          className: \"header-label\",\n          children: \"Session:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 543,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"sessionDropdown\",\n          value: selectedSession,\n          onChange: handleSessionChange,\n          className: \"dropdown-select\",\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"2012-13\",\n            children: \"2012-13\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 550,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"2013-14\",\n            children: \"2013-14\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 551,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 544,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 542,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 529,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"attendance-header\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"attendance-title\",\n        children: \"Attendance Management\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 558,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 557,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-panel\",\n      children: [selectedRole === 'Admin' && currentView === 'Admin' && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"main-button\",\n          style: {\n            width: '250px',\n            height: '150px',\n            marginRight: '100px'\n          },\n          onClick: () => handleRoleClick('Staff'),\n          children: \"Staff\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 567,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"main-button\",\n          style: {\n            width: '250px',\n            height: '150px'\n          },\n          onClick: () => handleRoleClick('Student'),\n          children: \"Student\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 575,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), selectedRole === 'Staff' && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"main-button\",\n          style: {\n            width: '250px',\n            height: '150px',\n            marginRight: '100px'\n          },\n          onClick: () => handleRoleClick('Staff'),\n          children: \"Staff\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 589,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"main-button\",\n          style: {\n            width: '250px',\n            height: '150px'\n          },\n          onClick: () => handleRoleClick('Student'),\n          children: \"Student\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 597,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 562,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 520,\n    columnNumber: 5\n  }, this);\n};\n_s(Attendance, \"TFeqW9bFgQEz7UpCPbQbUm9V5uE=\");\n_c = Attendance;\nexport default Attendance;\nvar _c;\n$RefreshReg$(_c, \"Attendance\");","map":{"version":3,"names":["FontAwesomeIcon","faHome","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","Attendance","_s","selectedMedium","setSelectedMedium","useState","selectedSession","setSelectedSession","roleDetails","setRoleDetails","selectedRole","setSelectedRole","selectedClass","setSelectedClass","selectedSection","setSelectedSection","selectedDate","setSelectedDate","attendanceData","setAttendanceData","existingData","setExistingData","id","name","class","section","rollNo","currentView","setCurrentView","handleMediumChange","e","target","value","handleSessionChange","handleRoleClick","role","description","handleSectionClick","handleDateChange","handleFetchAttendance","dummyData","present","absent","leave","mergedData","forEach","newData","existingIndex","findIndex","data","push","handleHomeIconClick","className","children","onClick","icon","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","onChange","style","width","height","marginRight","_c","$RefreshReg$"],"sources":["C:/Users/PratibhaNamdeo/OneDrive - BITTWOBYTE TECHNOLOGY PRIVATE LIMITED/React/my-app/src/Component/Attendance.js"],"sourcesContent":["\r\n\r\n// import React, { useState } from 'react';\r\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n// import { faHome } from '@fortawesome/free-solid-svg-icons';\r\n// import './Attendance.css'; // Import the CSS file for styling\r\n// import { Link } from 'react-router-dom';\r\n// // import 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n// const Attendance = () => {\r\n//   const [selectedMedium, setSelectedMedium] = useState('Hindi');\r\n//   const [selectedSession, setSelectedSession] = useState('2013-14');\r\n//   const [roleDetails, setRoleDetails] = useState(null);\r\n//   const [selectedRole, setSelectedRole] = useState(null);\r\n//   const [selectedClass, setSelectedClass] = useState('1');\r\n//   const [selectedSection, setSelectedSection] = useState(null);\r\n//   const [selectedDate, setSelectedDate] = useState(null);\r\n//   const [attendanceData, setAttendanceData] = useState([]);\r\n//   const [existingData, setExistingData] = useState([\r\n//     { id: 1, name: 'John Doe', class: '9', section: 'A', rollNo: '001' },\r\n//     { id: 2, name: 'Jane Smith', class: '9', section: 'A', rollNo: '002' },\r\n//     { id: 3, name: 'Michael Johnson', class: '9', section: 'A', rollNo: '003' },\r\n//   ]);\r\n//   const [adminClicked, setAdminClicked] = useState(false); // Track if Admin button is clicked\r\n\r\n//   const handleMediumChange = (e) => setSelectedMedium(e.target.value);\r\n//   const handleSessionChange = (e) => setSelectedSession(e.target.value);\r\n//   const handleRoleClick = (role) => {\r\n//     if (role === 'Admin') {\r\n//       setRoleDetails({ name: 'Admin', description: 'Admin details here' });\r\n//       setSelectedRole('Admin');\r\n//       setAdminClicked(true); // Set adminClicked to true when Admin button is clicked\r\n//     } else if (role === 'Staff') {\r\n//       setRoleDetails({ name: 'Staff', description: 'Staff details here' });\r\n//       setSelectedRole('Staff');\r\n//     } else if (role === 'Student') {\r\n//       setRoleDetails({ name: 'Student', description: 'Student details here' });\r\n//       setSelectedRole('Student');\r\n//     }\r\n//   };\r\n//   const handleSectionClick = (section) => setSelectedSection(section);\r\n//   const handleDateChange = (e) => setSelectedDate(e.target.value);\r\n\r\n//   const handleFetchAttendance = () => {\r\n//     // Fetch attendance data based on selectedClass, selectedSection, and selectedDate\r\n//     // Dummy data used for demonstration\r\n//     const dummyData = [\r\n//       { id: 4, name: 'Emily Watson', class: '9', section: 'B', rollNo: '004', present: 20, absent: 2, leave: 3 },\r\n//       { id: 5, name: 'Daniel Brown', class: '9', section: 'B', rollNo: '005', present: 21, absent: 1, leave: 1 },\r\n//     ];\r\n\r\n//     // Merge existing data with fetched attendance data based on unique identifiers (e.g., id, rollNo)\r\n//     const mergedData = [...existingData];\r\n//     dummyData.forEach((newData) => {\r\n//       const existingIndex = mergedData.findIndex((data) => data.rollNo === newData.rollNo);\r\n//       if (existingIndex !== -1) {\r\n//         mergedData[existingIndex] = { ...mergedData[existingIndex], ...newData };\r\n//       } else {\r\n//         mergedData.push(newData);\r\n//       }\r\n//     });\r\n//     setExistingData(mergedData);\r\n//     setAttendanceData(dummyData);\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"attendance-container\">\r\n//       <div className=\"home-icon\">\r\n//         <FontAwesomeIcon icon={faHome} />\r\n//       </div>\r\n//       <div className=\"medium-session-container\">\r\n//         <div className=\"medium-session-title\">\r\n//           <label htmlFor=\"mediumDropdown\" className=\"header-label\">Medium:</label>\r\n//           <select\r\n//             id=\"mediumDropdown\"\r\n//             value={selectedMedium}\r\n//             onChange={handleMediumChange}\r\n//             className=\"dropdown-select\"\r\n//           >\r\n//             <option value=\"Hindi\">Hindi</option>\r\n//             <option value=\"English\">English</option>\r\n//           </select>\r\n//         </div>\r\n//         <div className=\"medium-session-title\">\r\n//           <label htmlFor=\"sessionDropdown\" className=\"header-label\">Session:</label>\r\n//           <select\r\n//             id=\"sessionDropdown\"\r\n//             value={selectedSession}\r\n//             onChange={handleSessionChange}\r\n//             className=\"dropdown-select\"\r\n//           >\r\n//             <option value=\"2012-13\">2012-13</option>\r\n//             <option value=\"2013-14\">2013-14</option>\r\n//           </select>\r\n//         </div>\r\n//       </div>\r\n//       <div className=\"attendance-header\">\r\n//         <h1 className=\"attendance-title\">Attendance Management</h1>\r\n//       </div>\r\n//       <div className=\"main-panel\">\r\n//         {selectedRole !== 'Admin' && (\r\n//           <>\r\n//             <button\r\n//               className=\"main-button\"\r\n//               style={{ width: '250px', height: '150px', marginRight: '100px' }}\r\n//               onClick={() => handleRoleClick('Admin')}\r\n//             >\r\n//               Admin\r\n//             </button>\r\n//             <button\r\n//               className=\"main-button\"\r\n//               style={{ width: '250px', height: '150px', marginRight: '100px' }}\r\n//               onClick={() => handleRoleClick('Staff')}\r\n//             >\r\n//               Staff\r\n//             </button>\r\n//             <button\r\n//               className=\"main-button\"\r\n//               style={{ width: '250px', height: '150px' }}\r\n//               onClick={() => handleRoleClick('Student')}\r\n//             >\r\n//               Student\r\n//             </button>\r\n//           </>\r\n//         )}\r\n//         {selectedRole === 'Admin' && adminClicked && (\r\n//           <>\r\n//             <button\r\n//               className=\"main-button\"\r\n//               style={{ width: '250px', height: '150px', marginRight: '100px' }}\r\n//               onClick={() => handleRoleClick('Staff')}\r\n//             >\r\n//               Staff View\r\n//             </button>\r\n//             <button\r\n//               className=\"main-button\"\r\n//               style={{ width: '250px', height: '150px' }}\r\n//               onClick={() => handleRoleClick('Student')}\r\n//             >\r\n//               Student View\r\n//             </button>\r\n//           </>\r\n//         )}\r\n//       </div>\r\n//       {/* Other JSX code */}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// // export default Attendance;\r\n// import React, { useState } from 'react';\r\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n// import { faHome } from '@fortawesome/free-solid-svg-icons';\r\n// import './Attendance.css'; // Import the CSS file for styling\r\n// import { Link } from 'react-router-dom';\r\n// // import 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n// const Attendance = () => {\r\n//   const [selectedMedium, setSelectedMedium] = useState('Hindi');\r\n//   const [selectedSession, setSelectedSession] = useState('2013-14');\r\n//   const [roleDetails, setRoleDetails] = useState(null);\r\n//   const [selectedRole, setSelectedRole] = useState(null);\r\n//   const [selectedClass, setSelectedClass] = useState('1');\r\n//   const [selectedSection, setSelectedSection] = useState(null);\r\n//   const [selectedDate, setSelectedDate] = useState(null);\r\n//   const [attendanceData, setAttendanceData] = useState([]);\r\n//   const [existingData, setExistingData] = useState([\r\n//     { id: 1, name: 'John Doe', class: '9', section: 'A', rollNo: '001' },\r\n//     { id: 2, name: 'Jane Smith', class: '9', section: 'A', rollNo: '002' },\r\n//     { id: 3, name: 'Michael Johnson', class: '9', section: 'A', rollNo: '003' },\r\n//   ]);\r\n\r\n//   const handleMediumChange = (e) => setSelectedMedium(e.target.value);\r\n//   const handleSessionChange = (e) => setSelectedSession(e.target.value);\r\n  \r\n//   const handleRoleClick = (role) => {\r\n//     if (role === 'Admin') {\r\n//       setRoleDetails({ name: 'Admin', description: 'Admin details here' });\r\n//       setSelectedRole('Admin');\r\n//     } else if (role === 'Staff') {\r\n//       setRoleDetails({ name: 'Staff', description: 'Staff details here' });\r\n//       setSelectedRole('Staff');\r\n//     } else if (role === 'Student') {\r\n//       setRoleDetails({ name: 'Student', description: 'Student details here' });\r\n//       setSelectedRole('Student');\r\n//     }\r\n//   };\r\n  \r\n//   const handleSectionClick = (section) => setSelectedSection(section);\r\n//   const handleDateChange = (e) => setSelectedDate(e.target.value);\r\n\r\n//   const handleFetchAttendance = () => {\r\n//     // Fetch attendance data based on selectedClass, selectedSection, and selectedDate\r\n//     // Dummy data used for demonstration\r\n//     const dummyData = [\r\n//       { id: 4, name: 'Emily Watson', class: '9', section: 'B', rollNo: '004', present: 20, absent: 2, leave: 3 },\r\n//       { id: 5, name: 'Daniel Brown', class: '9', section: 'B', rollNo: '005', present: 21, absent: 1, leave: 1 },\r\n//     ];\r\n\r\n//     // Merge existing data with fetched attendance data based on unique identifiers (e.g., id, rollNo)\r\n//     const mergedData = [...existingData];\r\n//     dummyData.forEach((newData) => {\r\n//       const existingIndex = mergedData.findIndex((data) => data.rollNo === newData.rollNo);\r\n//       if (existingIndex !== -1) {\r\n//         mergedData[existingIndex] = { ...mergedData[existingIndex], ...newData };\r\n//       } else {\r\n//         mergedData.push(newData);\r\n//       }\r\n//     });\r\n//     setExistingData(mergedData);\r\n//     setAttendanceData(dummyData);\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"attendance-container\">\r\n//       <div className=\"home-icon\">\r\n//         <FontAwesomeIcon icon={faHome} />\r\n//       </div>\r\n//       <div className=\"medium-session-container\">\r\n//         <div className=\"medium-session-title\">\r\n//           <label htmlFor=\"mediumDropdown\" className=\"header-label\">Medium:</label>\r\n//           <select\r\n//             id=\"mediumDropdown\"\r\n//             value={selectedMedium}\r\n//             onChange={handleMediumChange}\r\n//             className=\"dropdown-select\"\r\n//           >\r\n//             <option value=\"Hindi\">Hindi</option>\r\n//             <option value=\"English\">English</option>\r\n//           </select>\r\n//         </div>\r\n//         <div className=\"medium-session-title\">\r\n//           <label htmlFor=\"sessionDropdown\" className=\"header-label\">Session:</label>\r\n//           <select\r\n//             id=\"sessionDropdown\"\r\n//             value={selectedSession}\r\n//             onChange={handleSessionChange}\r\n//             className=\"dropdown-select\"\r\n//           >\r\n//             <option value=\"2012-13\">2012-13</option>\r\n//             <option value=\"2013-14\">2013-14</option>\r\n//           </select>\r\n//         </div>\r\n//       </div>\r\n//       <div className=\"attendance-header\">\r\n//         <h1 className=\"attendance-title\">Attendance Management</h1>\r\n//       </div>\r\n//       <div className=\"main-panel\">\r\n//         <button\r\n//           className=\"main-button\"\r\n//           style={{ width: '250px', height: '150px', marginRight: '100px' }}\r\n//           onClick={() => handleRoleClick('Admin')}\r\n//         >\r\n//           Admin\r\n//         </button>\r\n//         {selectedRole === 'Admin' && (\r\n//           <>\r\n//             <button\r\n//               className=\"main-button\"\r\n//               style={{ width: '250px', height: '150px', marginRight: '100px' }}\r\n//               onClick={() => handleRoleClick('Staff')}\r\n//             >\r\n//               Staff\r\n//             </button>\r\n//             <button\r\n//               className=\"main-button\"\r\n//               style={{ width: '250px', height: '150px' }}\r\n//               onClick={() => handleRoleClick('Student')}\r\n//             >\r\n//               Student\r\n//             </button>\r\n//           </>\r\n//         )}\r\n//         {selectedRole === 'Staff' && (\r\n//           <>\r\n//             <button\r\n//               className=\"main-button\"\r\n//               style={{ width: '250px', height: '150px' }}\r\n//               onClick={() => handleRoleClick('Student')}\r\n//             >\r\n//               Student\r\n//             </button>\r\n//           </>\r\n//         )}\r\n//       </div>\r\n//       {/* Other JSX code */}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// // export default Attendance;\r\n// import React, { useState } from 'react';\r\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n// import { faHome } from '@fortawesome/free-solid-svg-icons';\r\n// import './Attendance.css'; // Import the CSS file for styling\r\n// import { Link } from 'react-router-dom';\r\n// // import 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n// const Attendance = () => {\r\n//   // State variables for managing selected options and role details\r\n//   const [selectedMedium, setSelectedMedium] = useState('Hindi'); // Selected medium (Hindi or English)\r\n//   const [selectedSession, setSelectedSession] = useState('2013-14'); // Selected session (e.g., 2013-14)\r\n//   const [roleDetails, setRoleDetails] = useState(null); // Role details (Admin, Staff, Student)\r\n//   const [selectedRole, setSelectedRole] = useState(null); // Selected role (Admin, Staff, Student)\r\n//   const [selectedClass, setSelectedClass] = useState('1'); // Selected class (e.g., 1)\r\n//   const [selectedSection, setSelectedSection] = useState(null); // Selected section (e.g., A, B)\r\n//   const [selectedDate, setSelectedDate] = useState(null); // Selected date for attendance\r\n//   const [attendanceData, setAttendanceData] = useState([]); // Array to store attendance data\r\n//   const [existingData, setExistingData] = useState([ // Array of existing data (dummy data)\r\n//     { id: 1, name: 'John Doe', class: '9', section: 'A', rollNo: '001' },\r\n//     { id: 2, name: 'Jane Smith', class: '9', section: 'A', rollNo: '002' },\r\n//     { id: 3, name: 'Michael Johnson', class: '9', section: 'A', rollNo: '003' },\r\n//   ]);\r\n\r\n//   // Function to handle medium change\r\n//   const handleMediumChange = (e) => setSelectedMedium(e.target.value);\r\n\r\n//   // Function to handle session change\r\n//   const handleSessionChange = (e) => setSelectedSession(e.target.value);\r\n  \r\n//   // Function to handle role button click\r\n//   const handleRoleClick = (role) => {\r\n//     if (role === 'Admin') {\r\n//       setRoleDetails({ name: 'Admin', description: 'Admin details here' });\r\n//       setSelectedRole('Admin');\r\n//     } else if (role === 'Staff') {\r\n//       setRoleDetails({ name: 'Staff', description: 'Staff details here' });\r\n//       setSelectedRole('Staff');\r\n//     } else if (role === 'Student') {\r\n//       setRoleDetails({ name: 'Student', description: 'Student details here' });\r\n//       setSelectedRole('Student');\r\n//     }\r\n//   };\r\n  \r\n//   // Function to handle section click\r\n//   const handleSectionClick = (section) => setSelectedSection(section);\r\n\r\n//   // Function to handle date change\r\n//   const handleDateChange = (e) => setSelectedDate(e.target.value);\r\n\r\n//   // Dummy function to fetch attendance data (not implemented in this code snippet)\r\n//   const handleFetchAttendance = () => {\r\n//     // Dummy data used for demonstration\r\n//     const dummyData = [\r\n//       { id: 4, name: 'Emily Watson', class: '9', section: 'B', rollNo: '004', present: 20, absent: 2, leave: 3 },\r\n//       { id: 5, name: 'Daniel Brown', class: '9', section: 'B', rollNo: '005', present: 21, absent: 1, leave: 1 },\r\n//     ];\r\n\r\n//     // Merge existing data with fetched attendance data based on unique identifiers (e.g., id, rollNo)\r\n//     const mergedData = [...existingData];\r\n//     dummyData.forEach((newData) => {\r\n//       const existingIndex = mergedData.findIndex((data) => data.rollNo === newData.rollNo);\r\n//       if (existingIndex !== -1) {\r\n//         mergedData[existingIndex] = { ...mergedData[existingIndex], ...newData };\r\n//       } else {\r\n//         mergedData.push(newData);\r\n//       }\r\n//     });\r\n//     setExistingData(mergedData);\r\n//     setAttendanceData(dummyData);\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"attendance-container\">\r\n//       {/* Home icon */}\r\n//       <div className=\"home-icon\">\r\n//         <FontAwesomeIcon icon={faHome} />\r\n//       </div>\r\n//       {/* Medium and session selection */}\r\n//       <div className=\"medium-session-container\">\r\n//         <div className=\"medium-session-title\">\r\n//           <label htmlFor=\"mediumDropdown\" className=\"header-label\">Medium:</label>\r\n//           <select\r\n//             id=\"mediumDropdown\"\r\n//             value={selectedMedium}\r\n//             onChange={handleMediumChange}\r\n//             className=\"dropdown-select\"\r\n//           >\r\n//             <option value=\"Hindi\">Hindi</option>\r\n//             <option value=\"English\">English</option>\r\n//           </select>\r\n//         </div>\r\n//         <div className=\"medium-session-title\">\r\n//           <label htmlFor=\"sessionDropdown\" className=\"header-label\">Session:</label>\r\n//           <select\r\n//             id=\"sessionDropdown\"\r\n//             value={selectedSession}\r\n//             onChange={handleSessionChange}\r\n//             className=\"dropdown-select\"\r\n//           >\r\n//             <option value=\"2012-13\">2012-13</option>\r\n//             <option value=\"2013-14\">2013-14</option>\r\n//           </select>\r\n//         </div>\r\n//       </div>\r\n//       {/* Attendance header */}\r\n//       <div className=\"attendance-header\">\r\n//         <h1 className=\"attendance-title\">Attendance Management</h1>\r\n//       </div>\r\n//       {/* Main panel with role buttons */}\r\n//       <div className=\"main-panel\">\r\n//         {/* Admin button */}\r\n//         <button\r\n//           className=\"main-button\"\r\n//           style={{ width: '250px', height: '150px', marginRight: '100px' }}\r\n//           onClick={() => handleRoleClick('Admin')}\r\n//         >\r\n//           Admin\r\n//         </button>\r\n//         {/* Show Staff and Student buttons if Admin role is selected */}\r\n//         {selectedRole === 'Admin' && (\r\n//           <>\r\n//             {/* Staff button */}\r\n//             <button\r\n//               className=\"main-button\"\r\n//               style={{ width: '250px', height: '150px', marginRight: '100px' }}\r\n//               onClick={() => handleRoleClick('Staff')}\r\n//             >\r\n//               Staff\r\n//             </button>\r\n//             {/* Student button */}\r\n//             <button\r\n//               className=\"main-button\"\r\n//               style={{ width: '250px', height: '150px' }}\r\n//               onClick={() => handleRoleClick('Student')}\r\n//             >\r\n//               Student\r\n//             </button>\r\n//           </>\r\n//         )}\r\n//         {/* Show Student and  Staff  button if Staff role is selected */}\r\n//         {selectedRole === 'Staff' && (\r\n//           <>\r\n//             {/* Student button */}\r\n//             <button\r\n//               className=\"main-button\"\r\n//               style={{ width: '250px', height: '150px' }}\r\n//               onClick={() => handleRoleClick('Student')}\r\n//             >\r\n//               Student\r\n//             </button>\r\n//           </>\r\n//         )}\r\n//       </div>\r\n//       {/* Other JSX code */}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Attendance;import React, { useState } from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faHome } from '@fortawesome/free-solid-svg-icons';\r\nimport './Attendance.css'; // Import the CSS file for styling\r\nimport { Link } from 'react-router-dom';\r\n// import 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nconst Attendance = () => {\r\n  const [selectedMedium, setSelectedMedium] = useState('Hindi');\r\n  const [selectedSession, setSelectedSession] = useState('2013-14');\r\n  const [roleDetails, setRoleDetails] = useState(null);\r\n  const [selectedRole, setSelectedRole] = useState(null);\r\n  const [selectedClass, setSelectedClass] = useState('1');\r\n  const [selectedSection, setSelectedSection] = useState(null);\r\n  const [selectedDate, setSelectedDate] = useState(null);\r\n  const [attendanceData, setAttendanceData] = useState([]);\r\n  const [existingData, setExistingData] = useState([\r\n    { id: 1, name: 'John Doe', class: '9', section: 'A', rollNo: '001' },\r\n    { id: 2, name: 'Jane Smith', class: '9', section: 'A', rollNo: '002' },\r\n    { id: 3, name: 'Michael Johnson', class: '9', section: 'A', rollNo: '003' },\r\n  ]);\r\n  const [currentView, setCurrentView] = useState('Admin'); // Default view is Admin\r\n\r\n  const handleMediumChange = (e) => setSelectedMedium(e.target.value);\r\n  const handleSessionChange = (e) => setSelectedSession(e.target.value);\r\n  \r\n  const handleRoleClick = (role) => {\r\n    if (role === 'Admin') {\r\n      setRoleDetails({ name: 'Admin', description: 'Admin details here' });\r\n      setSelectedRole('Admin');\r\n      setCurrentView('Admin'); // Set current view to Admin\r\n    } else if (role === 'Staff') {\r\n      setRoleDetails({ name: 'Staff', description: 'Staff details here' });\r\n      setSelectedRole('Staff');\r\n    } else if (role === 'Student') {\r\n      setRoleDetails({ name: 'Student', description: 'Student details here' });\r\n      setSelectedRole('Student');\r\n    }\r\n  };\r\n  \r\n  const handleSectionClick = (section) => setSelectedSection(section);\r\n  const handleDateChange = (e) => setSelectedDate(e.target.value);\r\n\r\n  const handleFetchAttendance = () => {\r\n    // Fetch attendance data based on selectedClass, selectedSection, and selectedDate\r\n    // Dummy data used for demonstration\r\n    const dummyData = [\r\n      { id: 4, name: 'Emily Watson', class: '9', section: 'B', rollNo: '004', present: 20, absent: 2, leave: 3 },\r\n      { id: 5, name: 'Daniel Brown', class: '9', section: 'B', rollNo: '005', present: 21, absent: 1, leave: 1 },\r\n    ];\r\n\r\n    // Merge existing data with fetched attendance data based on unique identifiers (e.g., id, rollNo)\r\n    const mergedData = [...existingData];\r\n    dummyData.forEach((newData) => {\r\n      const existingIndex = mergedData.findIndex((data) => data.rollNo === newData.rollNo);\r\n      if (existingIndex !== -1) {\r\n        mergedData[existingIndex] = { ...mergedData[existingIndex], ...newData };\r\n      } else {\r\n        mergedData.push(newData);\r\n      }\r\n    });\r\n    setExistingData(mergedData);\r\n    setAttendanceData(dummyData);\r\n  };\r\n\r\n  const handleHomeIconClick = () => {\r\n    setCurrentView('Admin'); // Set current view to Admin when home icon is clicked\r\n  };\r\n\r\n  return (\r\n    <div className=\"attendance-container\">\r\n      {/* Home Icon */}\r\n      {currentView !== 'Admin' && (\r\n        <div className=\"home-icon\" onClick={handleHomeIconClick}>\r\n          <FontAwesomeIcon icon={faHome} />\r\n        </div>\r\n      )}\r\n\r\n      {/* Medium and Session Dropdowns */}\r\n      <div className=\"medium-session-container\">\r\n        <div className=\"medium-session-title\">\r\n          <label htmlFor=\"mediumDropdown\" className=\"header-label\">Medium:</label>\r\n          <select\r\n            id=\"mediumDropdown\"\r\n            value={selectedMedium}\r\n            onChange={handleMediumChange}\r\n            className=\"dropdown-select\"\r\n          >\r\n            <option value=\"Hindi\">Hindi</option>\r\n            <option value=\"English\">English</option>\r\n          </select>\r\n        </div>\r\n        <div className=\"medium-session-title\">\r\n          <label htmlFor=\"sessionDropdown\" className=\"header-label\">Session:</label>\r\n          <select\r\n            id=\"sessionDropdown\"\r\n            value={selectedSession}\r\n            onChange={handleSessionChange}\r\n            className=\"dropdown-select\"\r\n          >\r\n            <option value=\"2012-13\">2012-13</option>\r\n            <option value=\"2013-14\">2013-14</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Attendance Header */}\r\n      <div className=\"attendance-header\">\r\n        <h1 className=\"attendance-title\">Attendance Management</h1>\r\n      </div>\r\n\r\n      {/* Main Panel */}\r\n      <div className=\"main-panel\">\r\n        {/* Show Admin, Staff, and Student buttons if Admin role is selected */}\r\n        {selectedRole === 'Admin' && currentView === 'Admin' && (\r\n          <>\r\n            {/* Display Staff button */}\r\n            <button\r\n              className=\"main-button\"\r\n              style={{ width: '250px', height: '150px', marginRight: '100px' }}\r\n              onClick={() => handleRoleClick('Staff')}\r\n            >\r\n              Staff\r\n            </button>\r\n            {/* Display Student button */}\r\n            <button\r\n              className=\"main-button\"\r\n              style={{ width: '250px', height: '150px' }}\r\n              onClick={() => handleRoleClick('Student')}\r\n            >\r\n              Student\r\n            </button>\r\n          </>\r\n        )}\r\n\r\n        {/* Show Staff and Student buttons if Staff role is selected */}\r\n        {selectedRole === 'Staff' && (\r\n          <>\r\n            {/* Display Staff button */}\r\n            <button\r\n              className=\"main-button\"\r\n              style={{ width: '250px', height: '150px', marginRight: '100px' }}\r\n              onClick={() => handleRoleClick('Staff')}\r\n            >\r\n              Staff\r\n            </button>\r\n            {/* Display Student button */}\r\n            <button\r\n              className=\"main-button\"\r\n              style={{ width: '250px', height: '150px' }}\r\n              onClick={() => handleRoleClick('Student')}\r\n            >\r\n              Student\r\n            </button>\r\n          </>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Attendance;\r\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}