{"ast":null,"code":"\n// import React, { useState } from 'react';\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n// import { faHome } from '@fortawesome/free-solid-svg-icons';\n\n// // Sample attendance data\n// const initialAttendanceData = [\n//   { sno: 1, rollNo: '001', studentName: 'John Doe', class: '9', section: 'A', present: 'Yes', absent: 'No', leave: 'No', month: 1 },\n//   { sno: 2, rollNo: '002', studentName: 'Jane Smith', class: '9', section: 'A', present: 'No', absent: 'Yes', leave: 'No', month: 2 },\n//   { sno: 3, rollNo: '003', studentName: 'Michael Johnson', class: '9', section: 'A', present: 'No', absent: 'No', leave: 'Yes', month: 3 }\n// ];\n\n// // MatrixTable component to display attendance data in a table\n// const MatrixTable = ({ data }) => {\n//   return (\n//     <div style={{ width: '100%', marginLeft: 'auto' }}>\n//       <table border=\"1\" style={{ width: '100%' }}>\n//         {/* Table header */}\n//         <thead style={{ backgroundColor: '#5DADE2' }}>\n//           <tr>\n//             <th>S.No</th>\n//             <th>Roll No</th>\n//             <th>Student Name</th>\n//             <th>Class</th>\n//             <th>Section</th>\n//             <th>Present</th>\n//             <th>Absent</th>\n//             <th>Leave</th>\n//           </tr>\n//         </thead>\n//         {/* Table body */}\n//         <tbody>\n//           {/* Mapping through attendance data to display rows */}\n//           {data.map((record, idx) => (\n//             <tr key={idx}>\n//               <td>{record.sno}</td>\n//               <td>{record.rollNo}</td>\n//               <td>{record.studentName}</td>\n//               <td>{record.class}</td>\n//               <td>{record.section}</td>\n//               <td>{record.present}</td>\n//               <td>{record.absent}</td>\n//               <td>{record.leave}</td>\n//             </tr>\n//           ))}\n//         </tbody>\n//       </table>\n//     </div>\n//   );\n// };\n\n// // Navbar component\n// const Navbar = () => {\n//   // State variables\n//   const [selectedClass, setSelectedClass] = useState(''); // Selected class\n//   const [selectedSection, setSelectedSection] = useState(''); // Selected section\n//   const [selectedMonth, setSelectedMonth] = useState(''); // Selected month\n//   const [searchTerm, setSearchTerm] = useState(''); // Search term\n//   const [filteredData, setFilteredData] = useState(initialAttendanceData); // Filtered data state\n//   const [attendanceType, setAttendanceType] = useState('self'); // Attendance type (self or class)\n\n//   // Event handlers for dropdown and input changes\n//   const handleClassChange = (event) => {\n//     setSelectedClass(event.target.value); // Update selected class state\n//     filterData(event.target.value, selectedSection, selectedMonth); // Filter data based on class change\n//   };\n\n//   const handleSectionChange = (event) => {\n//     setSelectedSection(event.target.value); // Update selected section state\n//     filterData(selectedClass, event.target.value, selectedMonth); // Filter data based on section change\n//   };\n\n//   const handleMonthChange = (event) => {\n//     setSelectedMonth(event.target.value); // Update selected month state\n//     filterData(selectedClass, selectedSection, event.target.value); // Filter data based on month change\n//   };\n\n//   const handleAttendanceTypeChange = (event) => {\n//     setAttendanceType(event.target.value); // Update attendance type (self or class)\n//   };\n\n//   const handleViewAttendance = () => {\n//     console.log('View Attendance clicked');\n//     // Add your logic to handle view attendance action\n//   };\n\n//   const handleFillAttendance = () => {\n//     console.log('Fill Attendance clicked');\n//     // Add your logic to handle fill attendance action\n//   };\n\n//   const filterData = (classValue, sectionValue, monthValue) => {\n//     let filtered = initialAttendanceData;\n//     if (classValue) {\n//       filtered = filtered.filter(record => record.class === classValue);\n//     }\n//     if (sectionValue) {\n//       filtered = filtered.filter(record => record.section === sectionValue);\n//     }\n//     if (monthValue) {\n//       filtered = filtered.filter(record => record.month === parseInt(monthValue));\n//     }\n//     setFilteredData(filtered);\n//   };\n\n//   return (\n//     <div className='containerStyle' style={{ alignItems: 'center', backgroundColor: 'white' }}>\n//       {/* Navbar header */}\n//       <div style={{ color: 'black', textAlign: 'left', backgroundColor: '#5DADE2', height: '10vh' }}>\n//         <h1>Staff </h1> {/* Main heading */}\n//         <a className=\"nav-link\" href=\"\" style={{ position: 'absolute', left: 0, top: 0 }}>\n//           <FontAwesomeIcon icon={faHome} style={{ background: 'none', height: '26px', marginTop: '35px', marginLeft: '1450px' }} />\n//         </a>\n//       </div>\n//       {/* Dropdown for Attendance Type */}\n//       <div style={{ display: 'flex', alignItems: 'center', marginBottom: '10px' }}>\n//         {/* Attendance header */}\n//         <h2 style={{ fontSize: '10px', marginRight: '10px' }}>Attendance</h2>\n//         <select\n//           value={attendanceType}\n//           onChange={handleAttendanceTypeChange}\n//           style={{ width: '100px' }}\n//         >\n//           <option value=\"self\">Self</option>\n//           <option value=\"class\">Class</option>\n//         </select>\n//       </div>\n//       <hr style={{ width: '100%', height: '2px', backgroundColor: 'black', margin: '10px 0' }} />\n\n//       {/* Attendance filling and viewing section */}\n//       <div style={{ display: 'flex', alignItems: 'center', marginBottom: '10px', flexDirection: 'column' }}>\n//         {/* Dropdowns in a single row */}\n//         {attendanceType === 'class' && (\n//           <div style={{ display: 'flex', alignItems: 'center', marginBottom: '10px' }}>\n//             <div style={{ marginRight: '10px' }}>\n//               <label htmlFor=\"classDropdown\">Class:</label>\n//               <select\n//                 id=\"classDropdown\"\n//                 value={selectedClass}\n//                 onChange={handleClassChange}\n//                 style={{ width: '200px' }}\n//               >\n//                 <option value=\"\">Select Class</option>\n//                 <option value=\"1\">1</option>\n//                 <option value=\"2\">2</option>\n//               </select>\n//             </div>\n//             <div style={{ marginRight: '10px' }}>\n//               <label htmlFor=\"sectionDropdown\">Section:</label>\n//               <select\n//                 id=\"sectionDropdown\"\n//                 value={selectedSection}\n//                 onChange={handleSectionChange}\n//                 style={{ width: '200px' }}\n//               >\n//                 <option value=\"\">Select Section</option>\n//                 <option value=\"A\">A</option>\n//                 <option value=\"B\">B</option>\n//               </select>\n//             </div>\n//             <div style={{ marginRight: '10px' }}>\n//               <label htmlFor=\"monthDropdown\">Month:</label>\n//               <select\n//                 id=\"monthDropdown\"\n//                 value={selectedMonth}\n//                 onChange={handleMonthChange}\n//                 style={{ width: '200px' }}\n//               >\n//                 <option value=\"\">Select Month</option>\n//                 <option value=\"1\">January</option>\n//                 <option value=\"2\">February</option>\n//                 <option value=\"3\">March</option>\n//                 <option value=\"4\">April</option>\n//                 <option value=\"5\">May</option>\n//                 <option value=\"6\">June</option>\n//                 <option value=\"7\">July</option>\n//                 <option value=\"8\">August</option>\n//                 <option value=\"9\">September</option>\n//                 <option value=\"10\">October</option>\n//                 <option value=\"11\">November</option>\n//                 <option value=\"12\">December</option>\n//               </select>\n//             </div>\n//             <button onClick={handleViewAttendance}>View Attendance</button>\n//             <button onClick={handleFillAttendance}>Fill Attendance</button>\n//           </div>\n//         )}\n//         <MatrixTable data={filteredData} />\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default Navbar;","map":{"version":3,"names":[],"sources":["C:/Users/PratibhaNamdeo/OneDrive - BITTWOBYTE TECHNOLOGY PRIVATE LIMITED/React/my-app/src/Component/Staff.js"],"sourcesContent":["\r\n// import React, { useState } from 'react';\r\n// import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n// import { faHome } from '@fortawesome/free-solid-svg-icons';\r\n\r\n// // Sample attendance data\r\n// const initialAttendanceData = [\r\n//   { sno: 1, rollNo: '001', studentName: 'John Doe', class: '9', section: 'A', present: 'Yes', absent: 'No', leave: 'No', month: 1 },\r\n//   { sno: 2, rollNo: '002', studentName: 'Jane Smith', class: '9', section: 'A', present: 'No', absent: 'Yes', leave: 'No', month: 2 },\r\n//   { sno: 3, rollNo: '003', studentName: 'Michael Johnson', class: '9', section: 'A', present: 'No', absent: 'No', leave: 'Yes', month: 3 }\r\n// ];\r\n\r\n// // MatrixTable component to display attendance data in a table\r\n// const MatrixTable = ({ data }) => {\r\n//   return (\r\n//     <div style={{ width: '100%', marginLeft: 'auto' }}>\r\n//       <table border=\"1\" style={{ width: '100%' }}>\r\n//         {/* Table header */}\r\n//         <thead style={{ backgroundColor: '#5DADE2' }}>\r\n//           <tr>\r\n//             <th>S.No</th>\r\n//             <th>Roll No</th>\r\n//             <th>Student Name</th>\r\n//             <th>Class</th>\r\n//             <th>Section</th>\r\n//             <th>Present</th>\r\n//             <th>Absent</th>\r\n//             <th>Leave</th>\r\n//           </tr>\r\n//         </thead>\r\n//         {/* Table body */}\r\n//         <tbody>\r\n//           {/* Mapping through attendance data to display rows */}\r\n//           {data.map((record, idx) => (\r\n//             <tr key={idx}>\r\n//               <td>{record.sno}</td>\r\n//               <td>{record.rollNo}</td>\r\n//               <td>{record.studentName}</td>\r\n//               <td>{record.class}</td>\r\n//               <td>{record.section}</td>\r\n//               <td>{record.present}</td>\r\n//               <td>{record.absent}</td>\r\n//               <td>{record.leave}</td>\r\n//             </tr>\r\n//           ))}\r\n//         </tbody>\r\n//       </table>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// // Navbar component\r\n// const Navbar = () => {\r\n//   // State variables\r\n//   const [selectedClass, setSelectedClass] = useState(''); // Selected class\r\n//   const [selectedSection, setSelectedSection] = useState(''); // Selected section\r\n//   const [selectedMonth, setSelectedMonth] = useState(''); // Selected month\r\n//   const [searchTerm, setSearchTerm] = useState(''); // Search term\r\n//   const [filteredData, setFilteredData] = useState(initialAttendanceData); // Filtered data state\r\n//   const [attendanceType, setAttendanceType] = useState('self'); // Attendance type (self or class)\r\n\r\n//   // Event handlers for dropdown and input changes\r\n//   const handleClassChange = (event) => {\r\n//     setSelectedClass(event.target.value); // Update selected class state\r\n//     filterData(event.target.value, selectedSection, selectedMonth); // Filter data based on class change\r\n//   };\r\n\r\n//   const handleSectionChange = (event) => {\r\n//     setSelectedSection(event.target.value); // Update selected section state\r\n//     filterData(selectedClass, event.target.value, selectedMonth); // Filter data based on section change\r\n//   };\r\n\r\n//   const handleMonthChange = (event) => {\r\n//     setSelectedMonth(event.target.value); // Update selected month state\r\n//     filterData(selectedClass, selectedSection, event.target.value); // Filter data based on month change\r\n//   };\r\n\r\n//   const handleAttendanceTypeChange = (event) => {\r\n//     setAttendanceType(event.target.value); // Update attendance type (self or class)\r\n//   };\r\n\r\n//   const handleViewAttendance = () => {\r\n//     console.log('View Attendance clicked');\r\n//     // Add your logic to handle view attendance action\r\n//   };\r\n\r\n//   const handleFillAttendance = () => {\r\n//     console.log('Fill Attendance clicked');\r\n//     // Add your logic to handle fill attendance action\r\n//   };\r\n\r\n//   const filterData = (classValue, sectionValue, monthValue) => {\r\n//     let filtered = initialAttendanceData;\r\n//     if (classValue) {\r\n//       filtered = filtered.filter(record => record.class === classValue);\r\n//     }\r\n//     if (sectionValue) {\r\n//       filtered = filtered.filter(record => record.section === sectionValue);\r\n//     }\r\n//     if (monthValue) {\r\n//       filtered = filtered.filter(record => record.month === parseInt(monthValue));\r\n//     }\r\n//     setFilteredData(filtered);\r\n//   };\r\n\r\n//   return (\r\n//     <div className='containerStyle' style={{ alignItems: 'center', backgroundColor: 'white' }}>\r\n//       {/* Navbar header */}\r\n//       <div style={{ color: 'black', textAlign: 'left', backgroundColor: '#5DADE2', height: '10vh' }}>\r\n//         <h1>Staff </h1> {/* Main heading */}\r\n//         <a className=\"nav-link\" href=\"\" style={{ position: 'absolute', left: 0, top: 0 }}>\r\n//           <FontAwesomeIcon icon={faHome} style={{ background: 'none', height: '26px', marginTop: '35px', marginLeft: '1450px' }} />\r\n//         </a>\r\n//       </div>\r\n//       {/* Dropdown for Attendance Type */}\r\n//       <div style={{ display: 'flex', alignItems: 'center', marginBottom: '10px' }}>\r\n//         {/* Attendance header */}\r\n//         <h2 style={{ fontSize: '10px', marginRight: '10px' }}>Attendance</h2>\r\n//         <select\r\n//           value={attendanceType}\r\n//           onChange={handleAttendanceTypeChange}\r\n//           style={{ width: '100px' }}\r\n//         >\r\n//           <option value=\"self\">Self</option>\r\n//           <option value=\"class\">Class</option>\r\n//         </select>\r\n//       </div>\r\n//       <hr style={{ width: '100%', height: '2px', backgroundColor: 'black', margin: '10px 0' }} />\r\n\r\n//       {/* Attendance filling and viewing section */}\r\n//       <div style={{ display: 'flex', alignItems: 'center', marginBottom: '10px', flexDirection: 'column' }}>\r\n//         {/* Dropdowns in a single row */}\r\n//         {attendanceType === 'class' && (\r\n//           <div style={{ display: 'flex', alignItems: 'center', marginBottom: '10px' }}>\r\n//             <div style={{ marginRight: '10px' }}>\r\n//               <label htmlFor=\"classDropdown\">Class:</label>\r\n//               <select\r\n//                 id=\"classDropdown\"\r\n//                 value={selectedClass}\r\n//                 onChange={handleClassChange}\r\n//                 style={{ width: '200px' }}\r\n//               >\r\n//                 <option value=\"\">Select Class</option>\r\n//                 <option value=\"1\">1</option>\r\n//                 <option value=\"2\">2</option>\r\n//               </select>\r\n//             </div>\r\n//             <div style={{ marginRight: '10px' }}>\r\n//               <label htmlFor=\"sectionDropdown\">Section:</label>\r\n//               <select\r\n//                 id=\"sectionDropdown\"\r\n//                 value={selectedSection}\r\n//                 onChange={handleSectionChange}\r\n//                 style={{ width: '200px' }}\r\n//               >\r\n//                 <option value=\"\">Select Section</option>\r\n//                 <option value=\"A\">A</option>\r\n//                 <option value=\"B\">B</option>\r\n//               </select>\r\n//             </div>\r\n//             <div style={{ marginRight: '10px' }}>\r\n//               <label htmlFor=\"monthDropdown\">Month:</label>\r\n//               <select\r\n//                 id=\"monthDropdown\"\r\n//                 value={selectedMonth}\r\n//                 onChange={handleMonthChange}\r\n//                 style={{ width: '200px' }}\r\n//               >\r\n//                 <option value=\"\">Select Month</option>\r\n//                 <option value=\"1\">January</option>\r\n//                 <option value=\"2\">February</option>\r\n//                 <option value=\"3\">March</option>\r\n//                 <option value=\"4\">April</option>\r\n//                 <option value=\"5\">May</option>\r\n//                 <option value=\"6\">June</option>\r\n//                 <option value=\"7\">July</option>\r\n//                 <option value=\"8\">August</option>\r\n//                 <option value=\"9\">September</option>\r\n//                 <option value=\"10\">October</option>\r\n//                 <option value=\"11\">November</option>\r\n//                 <option value=\"12\">December</option>\r\n//               </select>\r\n//             </div>\r\n//             <button onClick={handleViewAttendance}>View Attendance</button>\r\n//             <button onClick={handleFillAttendance}>Fill Attendance</button>\r\n//           </div>\r\n//         )}\r\n//         <MatrixTable data={filteredData} />\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Navbar;\r\n\r\n"],"mappingsignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}