{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PratibhaNamdeo\\\\OneDrive - BITTWOBYTE TECHNOLOGY PRIVATE LIMITED\\\\React\\\\my-app\\\\src\\\\Component\\\\Header.js\",\n  _s = $RefreshSig$();\n// import React from 'react';\n\n// export   default function  Header(props) {\n//     return(\n//     <div>\n//      Parents \n//    </div>\n//     );\n// }\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Header(props) {\n  _s();\n  const [searchText, setSearchText] = useState('');\n  const handleSearchChange = e => {\n    setSearchText(e.target.value);\n    // You can pass the searchText to a parent component or handle it here\n    // For example: props.handleSearch(searchText);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Search...\",\n      value: searchText,\n      onChange: handleSearchChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), \"Parents\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(Header, \"lpZkT7pWeo+MC0liMHDzSFPwEJc=\");\n_c = Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Header","props","_s","searchText","setSearchText","handleSearchChange","e","target","value","children","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/PratibhaNamdeo/OneDrive - BITTWOBYTE TECHNOLOGY PRIVATE LIMITED/React/my-app/src/Component/Header.js"],"sourcesContent":["// import React from 'react';\r\n\r\n// export   default function  Header(props) {\r\n//     return(\r\n//     <div>\r\n//      Parents \r\n//    </div>\r\n//     );\r\n// }\r\nimport React, { useState } from 'react';\r\n\r\nexport default function Header(props) {\r\n  const [searchText, setSearchText] = useState('');\r\n\r\n  const handleSearchChange = (e) => {\r\n    setSearchText(e.target.value);\r\n    // You can pass the searchText to a parent component or handle it here\r\n    // For example: props.handleSearch(searchText);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Search...\"\r\n        value={searchText}\r\n        onChange={handleSearchChange}\r\n      />\r\n      Parents\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,eAAe,SAASC,MAAMA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACpC,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAEhD,MAAMQ,kBAAkB,GAAIC,CAAC,IAAK;IAChCF,aAAa,CAACE,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;IAC7B;IACA;EACF,CAAC;EAED,oBACET,OAAA;IAAAU,QAAA,gBACEV,OAAA;MACEW,IAAI,EAAC,MAAM;MACXC,WAAW,EAAC,WAAW;MACvBH,KAAK,EAAEL,UAAW;MAClBS,QAAQ,EAAEP;IAAmB;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CAAC,WAEJ;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAEV;AAACd,EAAA,CApBuBF,MAAM;AAAAiB,EAAA,GAANjB,MAAM;AAAA,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}